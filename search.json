[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "An introduction to Systematic conservation planning with prioritzr",
    "section": "",
    "text": "Preface\nWelcome to the training course in systematic conservation planning with the prioritzr. This training course was originally held at the 2024 European Congress of Conservation biology in Bologna, although the materials found here will be preserved even after the conference and be openly available to everyone.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#what-you-will-learn",
    "href": "index.html#what-you-will-learn",
    "title": "An introduction to Systematic conservation planning with prioritzr",
    "section": "What you will learn",
    "text": "What you will learn\n\nThe basic concepts of Systematic conservation planning (SCP) and Integer Linear Programming (ILP) in particular\nHow to prepare your input data for a Conservation planning project\nHow to setup and run your first prioritization\nHow outputs can be analysed and interpreted.\nHow to adding complexity factors and changing your conservation planning outcomes\nAdvanced topics such as accounting for connectivity and management zones\n\nCompleting all course materials will take you on average 120 minutes, although people who have been exposed to similar methods or introduction before might take less. training materials before might less amount of time.\nIn this training course a number of different terms will be used. Whenever there are uncertainties with regards to definitions, see the Glossary.\nIf you have already heard before about the basic concepts of SCP and ILP (For example from the lecture then feel to jump to section 2 and data preparation 2  Preparing input data.\n\n\n\n\n\n\nBefore you start…\n\n\n\nIn order to run the materials on this course website, some preparatory steps need to be taken. Please see the installation instructions in Appendix A — Installation of all required software if you have never used prioritizr before!",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "chapters/intro.html",
    "href": "chapters/intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "1.1 Systematic conservation planning\nThe classical definition of Systematic conservation planning (SCP) is that of a structured, scientific approach to identifying and prioritizing areas for conservation (REFs). Its goal is to ensure that biodiversity is maintained and ecosystems are protected in a way that maximizes ecological, economic, and social benefits. Although SCP has been conceived specifically for creating and expanding reserve networks (usually protected areas), it can be used for much more including for example the identification of restoration, land-use planning or monitoring options.\nIt is also a common misconception that a project implementing SCP is only about prioritization (the algorithm part). Rather, it describes a whole framework typically ranging from",
    "crumbs": [
      "Introduction to SCP",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/intro.html#systematic-conservation-planning",
    "href": "chapters/intro.html#systematic-conservation-planning",
    "title": "1  Introduction",
    "section": "",
    "text": "Defining Conservation goals and objectives\nEliciting pathways to impact and theory of change with stakeholders\nCompiling and preparing data\nIdentifying targets, constraints and costs\nFormulating a planning problem and identifying priorities for it\nEvaluating said priorities through robust performance metrics\nImplementing the priorities in exchange with stakeholders\nMonitoring the performance and adapting plans where necessary.\n\n\n1.1.1 Key concepts",
    "crumbs": [
      "Introduction to SCP",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/intro.html#sec-what-is-integer-programming",
    "href": "chapters/intro.html#sec-what-is-integer-programming",
    "title": "1  Introduction",
    "section": "1.2 Exact algorithms and integer programming",
    "text": "1.2 Exact algorithms and integer programming\nSee Hanson et al. (2019) for additional discussion of optimality in linear programming.",
    "crumbs": [
      "Introduction to SCP",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/intro.html#tools-and-software",
    "href": "chapters/intro.html#tools-and-software",
    "title": "1  Introduction",
    "section": "1.3 Tools and software",
    "text": "1.3 Tools and software\nWe stress that prioritizr is not the only software available\n\n\n\n\nHanson, J.O., Schuster, R., Strimas-Mackey, M. & Bennett, J.R. (2019). Optimality in prioritizing conservation projects. Methods in Ecology and Evolution, 10, 1655–1663.",
    "crumbs": [
      "Introduction to SCP",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/Datapreparation.html",
    "href": "chapters/Datapreparation.html",
    "title": "2  Preparing input data",
    "section": "",
    "text": "2.1 Planning units\nSay something about what a PU file is, load and plot from the example data",
    "crumbs": [
      "Problem creation",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Preparing input data</span>"
    ]
  },
  {
    "objectID": "chapters/Datapreparation.html#features",
    "href": "chapters/Datapreparation.html#features",
    "title": "2  Preparing input data",
    "section": "2.2 Features",
    "text": "2.2 Features\nExplain what features are and plot",
    "crumbs": [
      "Problem creation",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Preparing input data</span>"
    ]
  },
  {
    "objectID": "chapters/Datapreparation.html#costs",
    "href": "chapters/Datapreparation.html#costs",
    "title": "2  Preparing input data",
    "section": "2.3 Costs",
    "text": "2.3 Costs\nExplain what costs are and how they are used",
    "crumbs": [
      "Problem creation",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Preparing input data</span>"
    ]
  },
  {
    "objectID": "chapters/Datapreparation.html#other-constraints-protected-areas",
    "href": "chapters/Datapreparation.html#other-constraints-protected-areas",
    "title": "2  Preparing input data",
    "section": "2.4 Other constraints (Protected areas)",
    "text": "2.4 Other constraints (Protected areas)\nShowcase a protected area file and exclusion areas as example",
    "crumbs": [
      "Problem creation",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Preparing input data</span>"
    ]
  },
  {
    "objectID": "chapters/Datapreparation.html#other-data-for-the-prioritization",
    "href": "chapters/Datapreparation.html#other-data-for-the-prioritization",
    "title": "2  Preparing input data",
    "section": "2.5 Other data for the prioritization",
    "text": "2.5 Other data for the prioritization\nMention weights, targets, etc and give example for each",
    "crumbs": [
      "Problem creation",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Preparing input data</span>"
    ]
  },
  {
    "objectID": "chapters/Datapreparation.html#preparing-data-in-different-formats",
    "href": "chapters/Datapreparation.html#preparing-data-in-different-formats",
    "title": "2  Preparing input data",
    "section": "2.6 Preparing data in different formats",
    "text": "2.6 Preparing data in different formats\nShowcase different dataformats as input alternative\nlibrary(tidyverse)\n1trees |&gt;\n  mutate(                                        \n2  volume_girth = volume * girth\n  )                                              \n\n1\n\nTake dataset and mutate\n\n2\n\nUpdate with interaction term",
    "crumbs": [
      "Problem creation",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Preparing input data</span>"
    ]
  },
  {
    "objectID": "chapters/Problemsolving.html",
    "href": "chapters/Problemsolving.html",
    "title": "4  Solving a conservation planning problem",
    "section": "",
    "text": "4.1 Ensure that a solver is available",
    "crumbs": [
      "Solving a problem",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Solving a conservation planning problem</span>"
    ]
  },
  {
    "objectID": "chapters/Problemsolving.html#create-a-solution",
    "href": "chapters/Problemsolving.html#create-a-solution",
    "title": "4  Solving a conservation planning problem",
    "section": "4.2 Create a solution",
    "text": "4.2 Create a solution",
    "crumbs": [
      "Solving a problem",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Solving a conservation planning problem</span>"
    ]
  },
  {
    "objectID": "chapters/Problemsolving.html#plot-the-solution",
    "href": "chapters/Problemsolving.html#plot-the-solution",
    "title": "4  Solving a conservation planning problem",
    "section": "4.3 Plot the solution",
    "text": "4.3 Plot the solution",
    "crumbs": [
      "Solving a problem",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Solving a conservation planning problem</span>"
    ]
  },
  {
    "objectID": "chapters/SolutionInterpretation.html",
    "href": "chapters/SolutionInterpretation.html",
    "title": "5  Interpret and analyse outputs",
    "section": "",
    "text": "5.1 Plot the solution",
    "crumbs": [
      "Solving a problem",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Interpret and analyse outputs</span>"
    ]
  },
  {
    "objectID": "chapters/SolutionInterpretation.html#calculate-performance-evaluation-metrics",
    "href": "chapters/SolutionInterpretation.html#calculate-performance-evaluation-metrics",
    "title": "5  Interpret and analyse outputs",
    "section": "5.2 Calculate performance evaluation metrics",
    "text": "5.2 Calculate performance evaluation metrics\nArea statistics, Mean representation, Target shortfall",
    "crumbs": [
      "Solving a problem",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Interpret and analyse outputs</span>"
    ]
  },
  {
    "objectID": "chapters/SolutionInterpretation.html#irreplaceability",
    "href": "chapters/SolutionInterpretation.html#irreplaceability",
    "title": "5  Interpret and analyse outputs",
    "section": "5.3 Irreplaceability",
    "text": "5.3 Irreplaceability\nCalculater ferrier irreplacibility and RWR",
    "crumbs": [
      "Solving a problem",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Interpret and analyse outputs</span>"
    ]
  },
  {
    "objectID": "chapters/ObjectiveFunctions.html",
    "href": "chapters/ObjectiveFunctions.html",
    "title": "6  Objective functions",
    "section": "",
    "text": "6.1 The need for targets",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Objective functions</span>"
    ]
  },
  {
    "objectID": "chapters/ObjectiveFunctions.html#minimum-set",
    "href": "chapters/ObjectiveFunctions.html#minimum-set",
    "title": "6  Objective functions",
    "section": "6.2 Minimum set",
    "text": "6.2 Minimum set",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Objective functions</span>"
    ]
  },
  {
    "objectID": "chapters/ObjectiveFunctions.html#maximum-coverage",
    "href": "chapters/ObjectiveFunctions.html#maximum-coverage",
    "title": "6  Objective functions",
    "section": "6.3 Maximum coverage",
    "text": "6.3 Maximum coverage",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Objective functions</span>"
    ]
  },
  {
    "objectID": "chapters/ObjectiveFunctions.html#creating-ranked-priority-maps",
    "href": "chapters/ObjectiveFunctions.html#creating-ranked-priority-maps",
    "title": "6  Objective functions",
    "section": "6.4 Creating ranked priority maps",
    "text": "6.4 Creating ranked priority maps",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Objective functions</span>"
    ]
  },
  {
    "objectID": "chapters/ProblemComplexity.html",
    "href": "chapters/ProblemComplexity.html",
    "title": "7  Adding complexity to conservation planning",
    "section": "",
    "text": "7.1 Decision variables",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Adding complexity to conservation planning</span>"
    ]
  },
  {
    "objectID": "chapters/ProblemComplexity.html#adding-socio-economic-costs",
    "href": "chapters/ProblemComplexity.html#adding-socio-economic-costs",
    "title": "7  Adding complexity to conservation planning",
    "section": "7.2 Adding (socio-economic) costs",
    "text": "7.2 Adding (socio-economic) costs",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Adding complexity to conservation planning</span>"
    ]
  },
  {
    "objectID": "chapters/ProblemComplexity.html#feature-weights",
    "href": "chapters/ProblemComplexity.html#feature-weights",
    "title": "7  Adding complexity to conservation planning",
    "section": "7.3 Feature weights",
    "text": "7.3 Feature weights",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Adding complexity to conservation planning</span>"
    ]
  },
  {
    "objectID": "chapters/ProblemComplexity.html#linear-penalities",
    "href": "chapters/ProblemComplexity.html#linear-penalities",
    "title": "7  Adding complexity to conservation planning",
    "section": "7.4 Linear penalities",
    "text": "7.4 Linear penalities",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Adding complexity to conservation planning</span>"
    ]
  },
  {
    "objectID": "chapters/Connectivity.html",
    "href": "chapters/Connectivity.html",
    "title": "8  Connectivity",
    "section": "",
    "text": "8.1 Boundary penalties\nThe inclusion of boundary penalties is one of the oldest and most widely applied ways of forcing a prioritization output (Ball et al. 2009). By setting a boundary length modifier (BLM) or penalty constant, we effectively penalize solutions that result in overly fragmented patches. Since it is a penality it does not fully prevent them however.\nUnfortunately, and similar to other penalty values, there are no specific guidelines of what might work or not, so often it might be worth exploring a few options.\nAs in previous tutorials we first load our data. However as noted above, we focus on the Alpine region only to make this interpretable. To do so we first crop and mask our PU and feature data to the alps.\n# Crop. Focus on the alps here\nalps &lt;- sf::st_read('extdata/boundary_alps/AlpineConvention.shp') |&gt;\n  sf::st_transform(crs = sf::st_crs(4326))\n\nPU &lt;- PU |&gt; terra::crop(alps) |&gt; terra::mask(alps)\nspp &lt;- spp |&gt; terra::crop(alps) |&gt; terra::mask(alps)\nNow we can create a conservation planning problem for this region.\n1p &lt;- problem(PU, spp) |&gt;\n2  add_min_set_objective() |&gt;\n3  add_relative_targets(targets = 0.3) |&gt;\n4  add_binary_decisions() |&gt;\n5  add_default_solver()\n\n\n1\n\nA problem with the cropped data (Planning units and features)\n\n2\n\nUsing a minimum set operation here.\n\n3\n\nArbitrary targets of 30% of the feature distribution\n\n4\n\nBinary decisions\n\n5\n\nUse the fastest solver installed/available (usually Gurobi or cbc)\nNow lets add some boundary constraints to the same problem.,\n# First we precompute the boundary matrix (large matrix of neighbourhoods)\nbm &lt;- boundary_matrix(PU)\n# Then we rescale it for better performance\nbm &lt;- rescale_matrix(bm)\n\n# Now create a new problem using the settings from above, but with a boundary penality\ns_blm &lt;- p |&gt;\n1  add_boundary_penalties(penalty = 1e-4, data = bm) |&gt;\n  solve()\n\n\n1\n\nSpecify a boundary penalty. Usually this requires some trial-and-error.\nAs you can see the solution is effectively more ‘clumped’. But what about the area selected? Do we need more area to get the best complementary solution here?\n# calculate costs (sum of area)\ndplyr::bind_rows(\n  eval_cost_summary(p, s),\n  eval_cost_summary(p, s_blm)\n)\n\n# Answer is...?",
    "crumbs": [
      "Advanced topics",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Connectivity</span>"
    ]
  },
  {
    "objectID": "chapters/Connectivity.html#boundary-penalties",
    "href": "chapters/Connectivity.html#boundary-penalties",
    "title": "8  Connectivity",
    "section": "",
    "text": "Boundary length modifier (BLM), which is effectively a penalty (Source: Marxan solutions)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPerformance\n\n\n\nBoundary length penalties generally solve faster with simpler objective functions, such as a minimum set objective function.",
    "crumbs": [
      "Advanced topics",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Connectivity</span>"
    ]
  },
  {
    "objectID": "chapters/Connectivity.html#connectivity-penalties",
    "href": "chapters/Connectivity.html#connectivity-penalties",
    "title": "8  Connectivity",
    "section": "8.2 Connectivity penalties",
    "text": "8.2 Connectivity penalties\nAnother more direct way to ingest some connectivity into a problem formulation is to use a certain auxillary layer, for example green infrastructure, (inverse) costs of transversal or connectivity estimates run through software like Circuitscape, as linear penalty. When including connectivity estimates as penalties in conservation planning we usually distinguish between symmetric and asymmetric penalties.\n\n8.2.1 Symmetric connectivity penalties\nSymmetric connectivity penalties describe information that is non-directional, in other words the same penalties apply when for example a species moves from west to east or from east to west across the study region (see also (Alagador et al. 2012)).\nIn the following example we again define a minimum set problem as before. We then load a pressure layer (the Human modification index) under the assumption that higher human modification values reduce the (structural) connectivity value of a landscape. Again we require a penalty term and it is advised to carefully calibrate this constant in practice.\n\n# Define a minimum set problem\np &lt;- problem(PU, spp) |&gt;                     \n  add_min_set_objective() |&gt;                 \n  add_relative_targets(targets = 0.3) |&gt;     \n  add_binary_decisions() |&gt;                  \n  add_default_solver() \n\n\n# Load the Human Modification index and clip to the alps\nHM &lt;- rast(\"extdata/gHM.tif\") |&gt; terra::crop(alps) |&gt; terra::mask(alps)\n\n# Now prepare the connectivity matrix and rescale\n1bm &lt;- connectivity_matrix(PU,HM)\n# rescale matrix\n2bm &lt;- rescale_matrix(bm)\n\n# Update the problem formulation and solve with a small penalty.\ns_con1 &lt;- p |&gt;\n3  add_connectivity_penalties(penalty = 1e-4, data = bm) |&gt;\n  solve()\n\nplot(s_con1)\n\n\n1\n\nThis command calculates a cross-product between the Planning unit and a pressure layer\n\n2\n\nRescaling is usually necessary to achieve better convergence\n\n3\n\nThe Penalty constant chosen reflects the magnitude of influence dedicated to this layer.\n\n\n\n\n\n\n\nPrioritization with symmetric connectivity penalties\n\n\n\n\n\n\n\n\nInfluence of penalty values\n\n\n\nTry changing the penalty parameter. How do the results change? If you encounter unusual results (all values identical) the reason is often an inappropriate penalty.\nIn real world example it usually recommended to calibrate such quite parameters so as to ensure realistic outcomes. See this vignette for more information on how to do so.\n\n\nAnother alternative approach could be to not use a separate layer, but constrain the area-based prioritization by some prior knowledge about minimum or maximum distance constraints. For example, one can envisage a case where we know that most species are unlikely to disperse further than 10 km from any selected patch. In this case it can be beneficial to avoid prioritizing such areas for conservation to avoid further fragmentation and possibly extinction of local populations.\nLet’s try it out (Note: this can take quite a bit longer to solve):\n\n# Here we precompute a proximity matrix with maximum distance of about ~10km (WGS84 projection)\n1cm &lt;- proximity_matrix(PU, distance = 0.1)\n# rescale boundary data\ncm &lt;- rescale_matrix(cm)\n\n# Do one with boundary constraints\ns_con2 &lt;- p |&gt;\n  add_connectivity_penalties(penalty = 1e-4, data = cm) |&gt;\n  add_cbc_solver(time_limit = 240,first_feasible = TRUE) |&gt; \n  solve()\n\nplot(s_con2)\n\n\n1\n\nNote the different command compared to before. This calculates proximity constraints.\n\n\n\n\n\n\n\nProximity penalties(10km)\n\n\n\n\n\n\n\n\nTip\n\n\n\nThere is also a matrix function called ‘adjacency_matrix()’. Can you imagine what this one does?\n\n\n\n\n8.2.2 Asymmetric connectivity constraints\nTODO (Beger et al. 2010)",
    "crumbs": [
      "Advanced topics",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Connectivity</span>"
    ]
  },
  {
    "objectID": "chapters/Connectivity.html#connectivity-constraints",
    "href": "chapters/Connectivity.html#connectivity-constraints",
    "title": "8  Connectivity",
    "section": "8.3 Connectivity constraints",
    "text": "8.3 Connectivity constraints\nSo far we have made use of penalties to nudge solutions into to being more connected or less fragmented. Penalties however can not guarantee per se that a solution satisfies the desired criteria for example having only a few rather than many continuous patches. Constraints force a solution to, regardless of the optimality gap used to generate a prioritization, always exhibit the intended characteristics (or being infeasible).\n\n8.3.1 Neighbour constraints\nThis simply constraint specifies that each selected PU has to have at least X neighbours in the solution.\n\n# Define a problem\np &lt;- problem(PU, spp) |&gt;\n  add_min_set_objective() |&gt;\n  add_relative_targets(targets = 0.3) |&gt;\n  add_binary_decisions() |&gt;\n  add_default_solver()\n\n# Obtain only solutions with PU that have at least 2 neighbouring PU\ns &lt;-\n  p %&gt;%\n1  add_neighbor_constraints(k = 2) %&gt;%\n  solve()\n\nplot(s)\n\n\n1\n\nTry changing the k parameter to 3 or 4. What happens?\n\n\n\n\n\n\n\nA solution with a hard connectivity constraint of having at least 2 neighbouring PUs\n\n\n\n\n8.3.2 Contiguity constraints\nOn the extreme end of the SLOSS (Single large vs several small) debate are single continuous reserves. Such planning solutions can be beneficial for example when the aim is to adequately conserve the most area under large budget constraints. For such cases prioritizr supports so called contiguity constraints, which form a single large reserve instead of multiple.\nContiguity constraints are very time-consuming to solve and an installation of a commercial solver (like Gurobi) is highly advised.\n\n# create problem with added contiguity constraints and solve it\ns2 &lt;-\n  p |&gt; \n  add_contiguity_constraints() |&gt; \n  add_relative_targets(targets = 0.1) |&gt; \n  add_gurobi_solver(time_limit = 2400, first_feasible = TRUE) |&gt; \n  solve()\n\n\n\n8.3.3 Linear constraints\nLinear constraints are not directly linked to connectivity, but can in theory used for this purpose (and more). Linear constraints simply specify that the solution has to satisfy a criteria, such as for example having at least XX% of area or covering at least YY% of ‘connectivity’ features. They are thus quite similar to including connectivity as a feature (Daigle et al. 2020) (see also below for connectivity features), but are implemented directly as constraints.\nFor example, in this problem formulation we constrain the solutions to only those that also contain a certain (admittedly) arbitrary amount of ‘greenness’ (quantified by the NDVI).\n\n# Load and clip the ndvi layer\nndvi &lt;- rast(\"extdata/ndvi.tif\") |&gt; crop(alps) |&gt; mask(alps)\n\n# The threshold for linear constraints. We want at least this much!\nthreshold &lt;- global(ndvi, \"sum\", na.rm = TRUE)[[1]] * 0.3\n\n# Update the solution.\ns3 &lt;-\n  p |&gt; \n  add_linear_constraints(\n1    data = ndvi, threshold = threshold, sense = \"&gt;=\"\n  ) |&gt; \n  solve()\n\nplot(s3)\n\n\n1\n\nWe specify a greater/equal sense here. Different directions such &lt; or &lt;= are also possible.\n\n\n\n\n\n\n\nA prioritization including certain minimal amounts of greenness as constraint\n\n\nCan you think of a reason why it might be beneficial to modify the input layers beforehand? Consider that it can incurs costs (in terms of area) to select PU as part of the solution.\n\n\n\n\n\n\nTip\n\n\n\nLinear constrains are extremely flexible and can be used to constrain priorities into many directions. For example, with them it is easily feasible to obtain a solution that satisfies at least 10% of total area over the studyregion, while maximizing target achievement.",
    "crumbs": [
      "Advanced topics",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Connectivity</span>"
    ]
  },
  {
    "objectID": "chapters/Connectivity.html#sec-connectivity-features",
    "href": "chapters/Connectivity.html#sec-connectivity-features",
    "title": "8  Connectivity",
    "section": "8.4 Connectivity features",
    "text": "8.4 Connectivity features\nAnother, relatively straight forward way, to ‘account’ for connectivity is to directly add features representing connectivity per se and ensure that solutions conserve not only the areas a species occurs in but also the area it transverse through. For example (Kujala et al. 2013) considered both current and future projected distributions of species (constrained by dispersal distance) to identify potential stepping stones or refugia in response to climate change. For a comprehensive overview see also the recent work on climate-smart metrics for conservation planning (Buenafe et al. 2023).\nAs an example here we aim to identify the top ‘priorities’ that account for present as well as future distributions of species in a simplified manner. This approach can certainly be improved further, for example by considering dispersal constraints or weights of present against future distributions (discounting), but illustrates the concept.\n\nbudget.area &lt;- round(0.3 * length(cells(PU))) ##  30 percent\n\n# Identify the solution for a maximum coverage problem and contemporary only\ns0 &lt;- problem(PU, spp) |&gt;\n  add_max_features_objective(budget = budget.area) |&gt; \n  add_relative_targets(targets = 0.3) |&gt;\n  add_binary_decisions() |&gt; \n  add_default_solver() |&gt; \n  solve()\n\n# Now add the future distributions of the species as well as their \nspp.list &lt;- list.files(path = \"extdata/SpeciesDistributions/\", full.names = T, recursive = T, pattern = \"tif$\")\nsppf &lt;- rast(spp.list[grep(\"rcp85\", spp.list)])\n# Crop and mask\nsppf &lt;- sppf |&gt; terra::crop(alps) |&gt; terra::mask(alps)\n\n# Add to stack\ns1 &lt;- problem(PU, c(spp, sppf)) |&gt;\n  add_max_features_objective(budget = budget.area) |&gt; \n1  add_relative_targets(targets = 0.3) |&gt;\n  add_binary_decisions() |&gt; \n  add_default_solver() |&gt; \n  solve()\n\n# Overlay and compare\n2comb &lt;- s0+s1 |&gt; as.factor()\nlevels(comb) &lt;- c(\"no priority\", \"current/future only\", \"current and future\")\nplot(comb, legend = \"bottom\")\n\n\n1\n\nNote that we specify identical targets for present/future. Ideally targets are specified by feature rather than flat as done here.\n\n2\n\nSince the decision variable is binary, we can simply sum the result.\n\n\n\n\n\n\n\nVertical connectivity with future projections\n\n\n\n\n\n\nAlagador, D., Trivino, M., Cerdeira, J.O., Bras, R., Cabeza, M. & Araujo, M.B. (2012). Linking like with like: Optimising connectivity between environmentally-similar habitats. Landscape Ecology, 27, 291–301.\n\n\nBall, I.R., Possingham, H.P. & Watts, M. (2009). Marxan and relatives: Software for spatial conservation prioritisation. Spatial conservation prioritisation: Quantitative methods and computational tools, 14, 185–196.\n\n\nBeger, M., Linke, S., Watts, M., Game, E., Treml, E., Ball, I. & Possingham, H.P. (2010). Incorporating asymmetric connectivity into spatial decision making for conservation. Conservation Letters, 3, 359–368.\n\n\nBeger, M., Metaxas, A., Balbar, A.C., McGowan, J.A., Daigle, R., Kuempel, C.D., Treml, E.A. & Possingham, H.P. (2022). Demystifying ecological connectivity for actionable spatial conservation planning. Trends in Ecology & Evolution, S0169534722002221.\n\n\nBuenafe, K.C.V., Dunn, D.C., Everett, J.D., Brito-Morales, I., Schoeman, D.S., Hanson, J.O., Dabalà, A., Neubert, S., Cannicci, S., Kaschner, K. & others. (2023). A metric-based framework for climate-smart conservation planning. Ecological Applications, 33, e2852.\n\n\nDaigle, R.M., Metaxas, A., Balbar, A.C., McGowan, J., Treml, E.A., Kuempel, C.D., Possingham, H.P. & Beger, M. (2020). Operationalizing ecological connectivity in spatial conservation planning with marxan connect (N. Golding, Ed.). Methods in Ecology and Evolution, 11, 570–579.\n\n\nHanson, J.O., Vincent, J., Schuster, R., Fahrig, L., Brennan, A., Martin, A.E., Hughes, J.S., Pither, R. & Bennett, J.R. (2022). A comparison of approaches for including connectivity in systematic conservation planning. Journal of Applied Ecology, 59, 2507–2519.\n\n\nKujala, H., Moilanen, A., Araujo, M.B. & Cabeza, M. (2013). Conservation planning with uncertain climate change projections. PloS one, 8, e53315.",
    "crumbs": [
      "Advanced topics",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Connectivity</span>"
    ]
  },
  {
    "objectID": "glossary.html",
    "href": "glossary.html",
    "title": "Glossary",
    "section": "",
    "text": "A glossary of key terms used in this Training course\n\n\nTerm\nAbbreviation if any\nDefinition\n\n\n\n\nBoundary Length Modifier\nBLM\nA penalty constant added to a conservation problem that penalizes selecting isolated patches. Results in overall more compact solutions.\n\n\nCARE\nCARE\nA often used abbreviation that stands for Connectivity, Adequacy, Representation, and Effectiveness which key principles that should be considered when designing a conservation network. See the Marxan website for more information.\n\n\nConservation Prioritization\n\nThe computational process of identifying (spatial) priorities for a given conservation objective (such as for identifying protected areas). Usually comes in in the form of a map.\n\n\nConstrain\n\nA (often linear) constant or parameter that limits the selection of certain PU as part of the solution.\n\n\nInteger\n\nIn programmatic terms a full number (e.g. -1, 1, 2, 3, …)\n\n\nInteger Linear Programming\nILP\nMathematical problem formulation using Linear Programming (ILP) where the variables are integer values and the objective function and equations are linear.\n\n\nPenalty\np\nIn the context of SCP commonly referring to a constant parameter used to penalize solutions. For example a costing or connectivity matrix.\n\n\nPlanning unit\nPU\nThe fundamental unit at which decisions in SCP are realized. Can be of multiple formats such as grid cells or farms\n\n\nSystematic Conservation Planning\nSCP\nA framework and step-wise approach towards mapping conservation areas. Usually involves multiple steps such as the identification of a problem and the theory of change, data collection and preparation, conservation prioritization, evaluation and finally implementation. See Margules & Pressey (2000)\n\n\n\n\n\n\n\n\n\n\n\n\nMargules, C.R. & Pressey, R.L. (2000). Systematic conservation planning. Nature, 405, 243–253.",
    "crumbs": [
      "Glossary"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Alagador, D., Trivino, M., Cerdeira, J.O., Bras, R., Cabeza, M. &\nAraujo, M.B. (2012). Linking like with like: Optimising connectivity\nbetween environmentally-similar habitats. Landscape Ecology,\n27, 291–301.\n\n\nBall, I.R., Possingham, H.P. & Watts, M. (2009). Marxan and\nrelatives: Software for spatial conservation prioritisation. Spatial\nconservation prioritisation: Quantitative methods and computational\ntools, 14, 185–196.\n\n\nBeger, M., Linke, S., Watts, M., Game, E., Treml, E., Ball, I. &\nPossingham, H.P. (2010). Incorporating asymmetric connectivity into\nspatial decision making for conservation. Conservation Letters,\n3, 359–368.\n\n\nBeger, M., Metaxas, A., Balbar, A.C., McGowan, J.A., Daigle, R.,\nKuempel, C.D., Treml, E.A. & Possingham, H.P. (2022). Demystifying\necological connectivity for actionable spatial conservation\nplanning. Trends in Ecology & Evolution,\nS0169534722002221.\n\n\nBuenafe, K.C.V., Dunn, D.C., Everett, J.D., Brito-Morales, I., Schoeman,\nD.S., Hanson, J.O., Dabalà, A., Neubert, S., Cannicci, S., Kaschner, K.\n& others. (2023). A metric-based framework for climate-smart\nconservation planning. Ecological Applications, 33,\ne2852.\n\n\nDaigle, R.M., Metaxas, A., Balbar, A.C., McGowan, J., Treml, E.A.,\nKuempel, C.D., Possingham, H.P. & Beger, M. (2020). Operationalizing\necological connectivity in spatial conservation planning with marxan\nconnect (N. Golding, Ed.). Methods in Ecology and\nEvolution, 11, 570–579.\n\n\nHanson, J.O., Schuster, R., Strimas-Mackey, M. & Bennett, J.R.\n(2019). Optimality in prioritizing conservation projects. Methods in\nEcology and Evolution, 10, 1655–1663.\n\n\nHanson, J.O., Vincent, J., Schuster, R., Fahrig, L., Brennan, A.,\nMartin, A.E., Hughes, J.S., Pither, R. & Bennett, J.R. (2022). A comparison of\napproaches for including connectivity in systematic conservation\nplanning. Journal of Applied Ecology, 59,\n2507–2519.\n\n\nKujala, H., Moilanen, A., Araujo, M.B. & Cabeza, M. (2013).\nConservation planning with uncertain climate change projections.\nPloS one, 8, e53315.\n\n\nMargules, C.R. & Pressey, R.L. (2000). Systematic conservation\nplanning. Nature, 405, 243–253.",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "appendices/installation.html",
    "href": "appendices/installation.html",
    "title": "Appendix A — Installation of all required software",
    "section": "",
    "text": "A.1 Install R\nR is a programming language and environment specifically designed for statistical computing and graphics. It is widely used among statisticians and data analysts for its extensive capabilities in data manipulation, statistical modelling, and graphical representation.\nTo install R, please go to the following website, then:\nIn addition, we also recommend the installation of RTools on the same website (here for example for Windows). RTools contains a range of code compilation software, such as a C++ compiler. These software are often necessary to install additional R-packages, particular when they are not available in binary format.\nTo download RTools, click the “Rtools44 installer” link, download and execute and follow the instructions.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Installation of all required software</span>"
    ]
  },
  {
    "objectID": "appendices/installation.html#install-r",
    "href": "appendices/installation.html#install-r",
    "title": "Appendix A — Installation of all required software",
    "section": "",
    "text": "Click on the link at the top for your respective operating system\nRecommended is the base version of R particular for new users. Select the latest version 4.4, download and execute.\nFollow the instructions in the installation popup.\n\n\n\n\n\n\n\nAlthough older R-versions can work as well (e.g. R 4.3), we recommend the latest version with which the training materials have been tested.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Installation of all required software</span>"
    ]
  },
  {
    "objectID": "appendices/installation.html#install-a-ide-such-as-rstudio",
    "href": "appendices/installation.html#install-a-ide-such-as-rstudio",
    "title": "Appendix A — Installation of all required software",
    "section": "A.2 Install a IDE such as Rstudio",
    "text": "A.2 Install a IDE such as Rstudio\nBy default R is terminal based, meaning inputs are parsed as entered. To create reproducible scripts we recommend the use of an integrated development environment (IDE) and here in particular Rstudio. Of course other alternative IDEs can also be used such as for example Visual Code. It is free to use in its basic version and available for most operating systems, including Windows 10/11, Linux and MacOS distributions.\nTo download and install Rstudio follow the instructions on this website.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Installation of all required software</span>"
    ]
  },
  {
    "objectID": "appendices/installation.html#install-a-solver-in-r",
    "href": "appendices/installation.html#install-a-solver-in-r",
    "title": "Appendix A — Installation of all required software",
    "section": "A.3 Install a solver in R",
    "text": "A.3 Install a solver in R\nTo use prioritizr and solve a conservation problem, we require a solver. Solvers are specialized algorithms or software designed to find the best solution (or an optimal solution) to a mathematical problem that involves maximizing or minimizing a particular function subject to certain constraints. For different mathematical problems, for example linear or mixed programming, different solvers are often necessary or perform better.\nMany state-of-the-art solvers are proprietary and often used by large companies to solve problems related to supply chain or financial risk managements. Although freely available and open-source solver slowly catch up, they usually cannot compete with proprietary such as Gurobi or CPLEX. For a comprehensive overview of different available and supported solvers a detailed vignette can be found on the prioritizr website.\nFor new users we recommend the use of the HiGHS solver, which is free to use and can be installed across a range of operating systems. To enable it run the following code and make sure it runs through without issues.\n\ninstall.packages(\"highs\")\n\nIf for some reason the installation of he package fails, another option could be the cbc solver, which can currently only be installed directly from the developers Github repository. For this to work you likely need to have RTools installed (see A.1 above).\n\nif (!require(remotes)) install.packages(\"remotes\")\nremotes::install_github(\"dirkschumacher/rcbc\")\n\n\n\n\n\n\n\nGurobi\n\n\n\nThe Gurobi solver is among the fastest supported ones for prioritizr. Unfortunately it is not openly available and purchasing it can be quite costly. However for academic users (those with an academic email) and researchers it is possible to obtain a time-limited (usually 12 months) license for research projects. This License can also be renewed.\nFor further information see the installation vignette on the prioritizr homepage!",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Installation of all required software</span>"
    ]
  },
  {
    "objectID": "appendices/installation.html#install-required-r-packages",
    "href": "appendices/installation.html#install-required-r-packages",
    "title": "Appendix A — Installation of all required software",
    "section": "A.4 Install required R packages",
    "text": "A.4 Install required R packages\nIn addition to the R and the solver packages above, we need to install several packages related to (spatial) data handling. These include for example dplyr, terra and sf, but also ggplot2 for plotting.\nTo install please run the following code in your R terminal:\n\ninstall.packages(\"dplyr\")\ninstall.packages(\"terra\")\ninstall.packages(\"sf\")\ninstall.packages(\"ggplot2\")\ninstall.packages(\"tidyterra\")\n\nMake sure that every line executes without an error. If you see an error, check first online for potential solutions (google) and afterwards get in touch with the course organizers.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Installation of all required software</span>"
    ]
  }
]