[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "An introduction to Systematic conservation planning with prioritzr",
    "section": "",
    "text": "Preface\nWelcome to the training course in systematic conservation planning with the prioritzr. This training course was originally held at the 2024 European Congress of Conservation biology in Bologna, although the materials found here will be preserved even after the conference and be openly available to everyone.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#what-you-will-learn",
    "href": "index.html#what-you-will-learn",
    "title": "An introduction to Systematic conservation planning with prioritzr",
    "section": "What you will learn",
    "text": "What you will learn\n\nThe basic concepts of Systematic conservation planning (SCP) and Integer Linear Programming (ILP) in particular\nHow to prepare your input data for a Conservation planning project\nHow to setup and run your first prioritization\nHow outputs can be analysed and interpreted.\nHow to adding complexity factors and changing your conservation planning outcomes\nAdvanced topics such as accounting for connectivity and management zones\n\nCompleting all course materials will take you on average 120 minutes, although people who have been exposed to similar methods or introduction before might take less. training materials before might less amount of time.\nIn this training course a number of different terms will be used. Whenever there are uncertainties with regards to definitions, see the Glossary.\nIf you have already heard before about the basic concepts of SCP and ILP (For example from the lecture then feel to jump to section 2 and data preparation 3 Loading prepared input data.\n\n\n\n\n\n\nBefore you start…\n\n\n\nIn order to run the materials on this course website, some preparatory steps need to be taken. Please see the installation instructions in Appendix A — Installation of all required software if you have never used prioritizr before!",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "chapters/intro.html",
    "href": "chapters/intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "1.1 Systematic conservation planning\nThe classical definition of Systematic conservation planning (SCP) is that of a structured, scientific approach to identifying and prioritizing areas for conservation (Margules & Pressey (2000)). Its goal is to ensure that biodiversity is maintained and ecosystems are protected in a way that maximizes ecological, economic, and social benefits. Although SCP has been conceived specifically for creating and expanding reserve networks (usually protected areas), it can be used for much more including for example the identification of restoration, land-use planning or monitoring options.\nIt is also a common misconception that a project implementing SCP is only about prioritization (the algorithm part). Rather, it describes a whole framework typically ranging from",
    "crumbs": [
      "Introduction to SCP",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/intro.html#systematic-conservation-planning",
    "href": "chapters/intro.html#systematic-conservation-planning",
    "title": "1  Introduction",
    "section": "",
    "text": "Defining Conservation goals and objectives\nEliciting pathways to impact and theory of change with stakeholders\nCompiling and preparing data\nIdentifying targets, constraints and costs\nFormulating a planning problem and identifying priorities for it\nEvaluating said priorities through robust performance metrics\nImplementing the priorities in exchange with stakeholders\nMonitoring the performance and adapting plans where necessary.",
    "crumbs": [
      "Introduction to SCP",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/intro.html#sec-what-is-integer-programming",
    "href": "chapters/intro.html#sec-what-is-integer-programming",
    "title": "1  Introduction",
    "section": "1.2 Exact algorithms and integer programming",
    "text": "1.2 Exact algorithms and integer programming\nExact algorithms in spatial planning are computational methods designed to find optimal solutions to spatial planning problems, where spatial planning involves the organization, management, and allocation of land and resources within a given area. These algorithms guarantee to find the best possible solution based on the defined criteria, constraints, and objectives of the problem.\nExact algorithm enable the solving of SCP problems as a mathematical model, such as a mixed (MILP) or integer linear programming (ILP) typically. Linear in this context refers to this common formulation of a planning problem, although non-linear problem formulations (e.g. quadratic or even more complex functions) are also possible. All LP problems have in common a specific objective function such as the maximum coverage or minimum set problem. See Hanson et al. (2019) for additional discussion of optimality in linear programming.",
    "crumbs": [
      "Introduction to SCP",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/intro.html#tools-and-software",
    "href": "chapters/intro.html#tools-and-software",
    "title": "1  Introduction",
    "section": "1.3 Tools and software",
    "text": "1.3 Tools and software\nThere are a range of tools and software for creating prioritizations in a SCP framework. Typical other well-known complementarity-based spatial conservation prioritization software are for example Zonation and Marxan, both of which use heuristic approaches for identifying priorities.\nFor ILP problems the prioritizr R-package is the easiest and most comprehensive package currently available, although other options exist as well. It should be stressed that in principle any mathematical or programming language can be used to solve ILP problems. The prioritizr package simply provides a convenience wrapper.\n\n\n\n\nHanson, J.O., Schuster, R., Strimas-Mackey, M. & Bennett, J.R. (2019). Optimality in prioritizing conservation projects. Methods in Ecology and Evolution, 10, 1655–1663.\n\n\nMargules, C.R. & Pressey, R.L. (2000). Systematic conservation planning. Nature, 405, 243–253.",
    "crumbs": [
      "Introduction to SCP",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/Datapreparation.html",
    "href": "chapters/Datapreparation.html",
    "title": "2  Obtaining data for the course",
    "section": "",
    "text": "2.1 Description of testing data\nSpecifically this folder contains:\nAll data have been originally extracted and prepared by Thiago Cavalcante for this course and the Zonation 5 software.",
    "crumbs": [
      "Problem creation",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Obtaining data for the course</span>"
    ]
  },
  {
    "objectID": "chapters/Datapreparation.html#description-of-testing-data",
    "href": "chapters/Datapreparation.html#description-of-testing-data",
    "title": "2  Obtaining data for the course",
    "section": "",
    "text": "Species Distributions: - species distributions modelled under current and future (rcp 8.5) climate for 67 tree species. Note: all spatial raster data is at ~10x10 km resolution (WGS84) and harmonized spatially.\nother data including a\n\nplanning units raster\nNDVI : proxy for dense and healthy vegetation cover.\nghm: global human modification index. For further details on the species distributions, NDVI and GHM layers, see https://github.com/zonationteam/Zonation5-training/tree/main/2024%20Europe/Exercises/data\nurban_prct and HI_forest_prct.tif : percentage coverage per 10x10 grid cell of urban/periurban, and high-intensity forests, respectively. Aggregated to 10x10k from European land systems dataset by Dou et al ., 2021, originally at 1km resolution.\nprotectedareas.tif : all protected areas for the study area from WDPA\nprotectedareas_I_II.tif : strictly protected areas (IUCN categories I and II) for the study area from WDPA\nspecies_red_list.csv : global and European assessment of conservation status of these 67 species\n\n\n\n\n\n\n\n\n\nSteps for data preparation\n\n\n\nFor the use in prioritizr features, and all other spatial data, need to be perfectly harmonized with the planning units data and (same extent, resolution, number of grid cells). This step must be done prior to the prioritisation, as part of the data preparation.\nFor this training workshop, the data is already prepared, but bear in mind that data preparation is an essential step in the conservation planning process. Note that in practice for any SCP project the data preparation might take considerable time for extraction and harmonization.",
    "crumbs": [
      "Problem creation",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Obtaining data for the course</span>"
    ]
  },
  {
    "objectID": "chapters/Datapreparation.html#planning-units",
    "href": "chapters/Datapreparation.html#planning-units",
    "title": "2  Obtaining data for the course",
    "section": "3.1 Planning units",
    "text": "3.1 Planning units\nPlanning units (PU) contains the spatial data of the study area. Although a range of different data formats are theoretical possible in prioritizr. PU are generally defined in SCP as the spatial units at which decisions are realised. For this tutorial we primarily rely on a raster format, specifically 10x10 km grid cells in Europe.\nLet’s read and plot the planning units raster:\n\n# Required packages\nlibrary(terra)\nlibrary(viridisLite)\n\n# Load the Planning unit\nPU &lt;- rast(\"data/PlanningUnits.tif\")\nplot(PU, col = viridisLite::mako(n = 1))\n\n\nThe value of the planning units can determine the cost of each planning unit in the prioritisation. In our case, we often want to reach 30% area coverage (out of total area) for example. The cost for achieving this is the amonut of land value in the Planning Units raster, here specified as equal value of 1 (so that the budget will be expressed in number of grid cells in prioritizr).\n\n\n\n\n\n\nImportant\n\n\n\nNote especially when planning over larger extents the amount of area within a PU might differ depending on the geographic projection used. For this tutorial and simplicity, we rely on a longitude-latitude projection, which does not reflect area accurately (It is not an equal-area projection). In other words: PU in the north of Europe might contain less area than PU in the south of Europe despite having the same cost.\n\nWhen planning your own SCP project use a geographic projection appropriate for your case study!",
    "crumbs": [
      "Problem creation",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Obtaining data for the course</span>"
    ]
  },
  {
    "objectID": "chapters/Datapreparation.html#features",
    "href": "chapters/Datapreparation.html#features",
    "title": "2  Obtaining data for the course",
    "section": "3.2 Features",
    "text": "3.2 Features\nA feature is spatial data on the distribution of a biodiversity entity, typically a species, habitat, ecosystem service or similar.\nHere, we consider the SDM of 67 tree species in Europe as features. We will focus on current distributions but we also provide projected distributions under a future climate scenarip (RCP 8.5) as part of this workshop.\nLet’s read the current SDM as a raster stack and plot one species as an example:\n\n# Get the file names of the testing data\nspp.list &lt;- list.files(path = \"data/SpeciesDistributions/\", full.names = T, recursive = T, pattern = \"tif$\")\n\n# Load all files and rename them \nspp &lt;- rast(spp.list[grep(\"current\", spp.list)])\n1names(spp) &lt;- gsub(\"_ens-sdms_cur2005_prob_pot\", \"\" ,names(spp))\n\n# Plot first four species distributions  \nspp |&gt; subset(1:4) |&gt; \n  plot(axes = F,col = viridisLite::mako(n = 100, direction = -1), main = c(names(spp)[1:4]))\n\n# also load the SDM projected under climate scenario rcp 8.5 \n# read sdm under climate scenario rcp 8.5\nspp.rcp85 &lt;- rast(spp.list[grep(\"rcp85\", spp.list)])\n\n# Similarly rename feature layers by species names\nnames(spp.rcp85) &lt;- gsub(\"_ens-sdms_rcp85_fut2065_prob_pot.tif\", \"\" ,names(spp.rcp85))\n\n\n1\n\nWe rename feature layers by species names. This will enable to link the features rasters to a table of feature characteristics, weights, targets, taxonomy.",
    "crumbs": [
      "Problem creation",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Obtaining data for the course</span>"
    ]
  },
  {
    "objectID": "chapters/Datapreparation.html#existing-protected-areas",
    "href": "chapters/Datapreparation.html#existing-protected-areas",
    "title": "2  Obtaining data for the course",
    "section": "3.3 Existing protected areas",
    "text": "3.3 Existing protected areas\nOften, we do not start from scratch: we often want to identify top priorities that complement and expand on existing protected areas. See the Chapter 2 section for more information on what is contained in those two protected area layers.\n\n# load protected areas data\nPA &lt;- rast(\"data/protectedareas.tif\")\n\n# load strict protected areas\nstPA &lt;- rast(\"data/protectedareas_I_II.tif\")\n\n\nplot(c(PA, stPA), axes = F, col = viridisLite::mako(n = 100, direction = -1), main = c(\"Protected areas \\n (all)\", \"Strictly protected areas \\n (IUCN I and II)\"))",
    "crumbs": [
      "Problem creation",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Obtaining data for the course</span>"
    ]
  },
  {
    "objectID": "chapters/Datapreparation.html#areas-under-constrained-use-locked-out-or-no-go-areas",
    "href": "chapters/Datapreparation.html#areas-under-constrained-use-locked-out-or-no-go-areas",
    "title": "2  Obtaining data for the course",
    "section": "3.4 Areas under constrained use (locked-out or no-go areas)",
    "text": "3.4 Areas under constrained use (locked-out or no-go areas)\nSome areas are usually unavailable for SCP. Here we use layers of high-intensity forests and urban areas as a proxy, derived from 1km² European land systems data from Dou et al. (2021) . We lock out the planning units that have over 50% of urban and peri-urban, or over 50% of high intensity forest. In doing so, we assume that, in these high-intensity areas, conservation would likely conflict with economic interests.\n\n## create locked out constraints to define areas that should be left out of the solution.\n## from Dou et al., 2021\n## aggregated at 10x10 k and aligned with the planning units raster\nHI.forest &lt;- rast(\"data/HI_forest_prct.tif\")\n\nurban &lt;- rast(\"data/urban_prct.tif\")\n\nplot(c(HI.forest, urban), axes = F, col = viridisLite::mako(n = 10, direction = -1), main = c(\"High intensity forest\", \"Urban and peri-urban areas\") )\n\n# --- #\n# For further use we make a mask to lock out these areas\n1locked.out &lt;- sum(HI.forest, urban)\n2rclmat &lt;- matrix(ncol = 3, nrow = 2, byrow = T,\n                 c(0,50, 0,\n                   50, 101, 1))\n\nlocked.out.bin &lt;- terra::classify(locked.out, rclmat) ## convert to binary : 1 = pu that have more than 50% coverage of urban and/or HI forest.\n\n\n1\n\nSum up the area shares of both classes as a proxy.\n\n2\n\nDefine a matrix for reclassification as highlighted above.",
    "crumbs": [
      "Problem creation",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Obtaining data for the course</span>"
    ]
  },
  {
    "objectID": "chapters/Datapreparation.html#sec-costs",
    "href": "chapters/Datapreparation.html#sec-costs",
    "title": "2  Obtaining data for the course",
    "section": "3.5 Costs",
    "text": "3.5 Costs\nIn the context of SCP Costs are typically spatially-explicit socio-economic data that can be factored into a prioritization to account for the feasibility of implementing conservation in a planning unit. In the planning they are typically used a constrain to penalize or limit the allocation of PU to a solution. There are different types of costs that commonly used:\n\nAcquisition cost = price of land/water area\nOpportunity cost = lost revenue to other land use types\nTransaction cost = e.g. cost of negotiating protection\nManagement cost = maintenance and management of the PA\n\nIn reality, we rarely have this information and need to use proxies. Here, we use global human modification (GHM) as a proxy for socio-economic costs. Including the GHM as a cost layer would assume that highly human-dominated landscapes would be more costly to protect, than others.\n\ngHM &lt;- rast(\"data/gHM.tif\")\n\n# For simplicity we here use a threshold so that sites that have GHM index lower than specified threshold are not penalized\ngHM[gHM&lt;0.3] &lt;- 0  \n\nplot(gHM, axes = F, col = viridisLite::mako(n = 10, direction = -1), main = \"global human modification index\")\n\n\n\n\n\n\n\n\nAbout costs\n\n\n\nGenerally be mindful about the use of costs in SCP as chosing any specific costing estimate can be quite impactful in driving final solutions.\nFor some further background reading we recommend McCreless et al. (2013), Kujala et al. (2018) and Armsworth (2014)",
    "crumbs": [
      "Problem creation",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Obtaining data for the course</span>"
    ]
  },
  {
    "objectID": "chapters/Datapreparation.html#vegetation-quality",
    "href": "chapters/Datapreparation.html#vegetation-quality",
    "title": "2  Obtaining data for the course",
    "section": "3.6 Vegetation quality",
    "text": "3.6 Vegetation quality\nNDVI is often interpreted as dense and healthy vegetation, and one may be interested in selecting sites with a higher NDVI, for example when attempting to identify Green Infrastructure sites.\n\nndvi &lt;- rast(\"data/ndvi.tif\")",
    "crumbs": [
      "Problem creation",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Obtaining data for the course</span>"
    ]
  },
  {
    "objectID": "chapters/Datapreparation.html#other-data-for-the-prioritization",
    "href": "chapters/Datapreparation.html#other-data-for-the-prioritization",
    "title": "2  Obtaining data for the course",
    "section": "3.7 Other data for the prioritization",
    "text": "3.7 Other data for the prioritization\nSpatial prioritisations can also be shaped by the importance of certain feature relative to others (e.g. threat status). This can be addressed by the use of feature-specific weights.\nFor setting weights, we will use the red list dataset and assign higher weight to more vulnerable species, following Jung et al. (2021).\nSpecifically we apply weights in this example as\n\ndefault weight of 1 for Least Concern species.\n2 for near-threatened and data-deficient species\n4 for vulnerable species\n6 for endangered species\n8 for critically endangered species.\n\n\n## read red list information\nredlist.trees &lt;- read.csv('data/species_red_list.csv')\n\n## assign weight based on red list status\nredlist.trees$weight &lt;- ifelse(redlist.trees$Global == \"Vulnerable\" | redlist.trees$Europe == \"Vulnerable\", 4,\n                                      ifelse(redlist.trees$Global == \"Near Threatened\" | redlist.trees$Europe == \"Near Threatened\", 2,\n                                             ifelse(redlist.trees$Global == \"Data Deficient\" | redlist.trees$Europe == \"Data Deficient\", 2, 1)))\n\n## must be in the same order as the features (spp) rasterstack\nrownames(redlist.trees) &lt;- redlist.trees$spp_name\nredlist.trees &lt;- redlist.trees[names(spp),]\n\nDifferent weights are of course possible, for example by relying on expert or stakeholder feedback, evolutionary distinctiveness or cost benefits. Ultimately this is up to the spatial planner.",
    "crumbs": [
      "Problem creation",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Obtaining data for the course</span>"
    ]
  },
  {
    "objectID": "chapters/Datapreparation.html#sec-targets",
    "href": "chapters/Datapreparation.html#sec-targets",
    "title": "2  Obtaining data for the course",
    "section": "3.8 Targets",
    "text": "3.8 Targets\nAnother important aspect of planning are area-based targets, which define the amount of the distribution of each feature that is deemed sufficient to protect. Although one could set flat targets if there is a valid reasoning (e.g. 10% of all features), the most typical approach for targets is to use log-linear targets Rodrigues et al. (2004). Another is to use the IUCN criteria to set targets based on the minimizing extinction risk Jung et al. (2021).\nNote that targets, similar as costs (see Section 3.5) can substantially drive the solution. Thus care should be taken how such targets are defined and used in SCP.\n\n\n\n\n\n\nNecessity of targets\n\n\n\nNot every objective function in prioritizr requires targets. However the specification of targets is usually recommended as it forces the planner to think about the critical question of “How much do we want and need to conserve or manage”. If such decisions are not taken by the analyst, it is usually taken by the algorithmic approach.\n\n\n\n\n\n\nArmsworth, P.R. (2014). Inclusion of costs in conservation planning depends on limited datasets and hopeful assumptions. Annals of the New York Academy of Sciences, 1322, 61–76.\n\n\nDou, Y., Cosentino, F., Malek, Z., Maiorano, L., Thuiller, W. & Verburg, P.H. (2021). A new european land systems representation accounting for landscape characteristics. Landscape Ecology, 36, 2215–2234.\n\n\nJung, M., Arnell, A., De Lamo, X., Garcı́a-Rangel, S., Lewis, M., Mark, J., Merow, C., Miles, L., Ondo, I., Pironon, S. & others. (2021). Areas of global importance for conserving terrestrial biodiversity, carbon and water. Nature Ecology & Evolution, 5, 1499–1509.\n\n\nKujala, H., Lahoz-Monfort, J.J., Elith, J. & Moilanen, A. (2018). Not all data are equal: Influence of data type and amount in spatial conservation prioritisation. Methods in Ecology and Evolution, 9, 2249–2261.\n\n\nMcCreless, E., Visconti, P., Carwardine, J., Wilcox, C. & Smith, R.J. (2013). Cheap and nasty? The potential perils of using management costs to identify global conservation priorities. PLoS One, 8, e80893.\n\n\nRodrigues, A.S., Akcakaya, H.R., Andelman, S.J., Bakarr, M.I., Boitani, L., Brooks, T.M., Chanson, J.S., Fishpool, L.D., Da Fonseca, G.A., Gaston, K.J. & others. (2004). Global gap analysis: Priority regions for expanding the global protected-area network. BioScience, 54, 1092–1100.",
    "crumbs": [
      "Problem creation",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Obtaining data for the course</span>"
    ]
  },
  {
    "objectID": "chapters/Problemcreation.html",
    "href": "chapters/Problemcreation.html",
    "title": "3  Create and understand planning problems",
    "section": "",
    "text": "3.1 Our first planning problem\nFor our first problem we will create a problem that finds the best areas for 30% protected area coverage on European land. Go to the next section ( Chapter 4) to learn how to solve and interpret the outputs from a prioritizr problem.\nTip: Hover over the numbers on the right to learn more about each function. Note that the order\n# Load the prioritizr package\nlibrary(prioritizr)                               \n\n# define area budget (unit: grid cells)\n1budget.area &lt;- round(0.3 * length(cells(PU)))\n\n2p &lt;- problem(PU, spp) %&gt;%\n3  add_min_shortfall_objective(budget = budget.area) %&gt;%\n4  add_relative_targets(targets = 1) %&gt;%\n5  add_cbc_solver() %&gt;%\n6  add_proportion_decisions()\n\n\n1\n\nThis effectively defines the total budget as 30% of the length of all PU. This works since the length is identical to the sum (cost =1).\n\n2\n\nHere we define a problem using the planning unit layer and the different species layer. Internally this will create an intersection of both. Other possible inputs to this function could be zones.\n\n3\n\nAn objective function is added here. In this case we use the minimum shortfall objective.\n\n4\n\nFor simplicity we define target as 100% for all species distributions\n\n5\n\nHere we add a solver. We rely here on CBC which in tests hasthe best performance among open-source solvers.\n\n6\n\nHere we add proportional decisions means that proportions of planning units can be selected in the solution. This typically solve faster than binary decisions.",
    "crumbs": [
      "Problem creation",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Create and understand planning problems</span>"
    ]
  },
  {
    "objectID": "chapters/Problemcreation.html#understanding-the-problem-object",
    "href": "chapters/Problemcreation.html#understanding-the-problem-object",
    "title": "3  Create and understand planning problems",
    "section": "3.2 Understanding the problem object",
    "text": "3.2 Understanding the problem object\nNow that we have created a problem, let’s have a look at the object.\n\n# Simply run\np\n\n\n\n\nThe output of a prioritizr object.\n\n\nAs visible the object contains information about the Planning units, including the spatial extent and geographic projection, as well as any features and complexity factors related to the formulation of the problem.\nRunning p$summary() will provide a summary with more detail.\n\n\n\n\n\n\nObject\n\n\n\nThe prioritizr planning objects contain a range of different functions that can be queried and executed, for example to obtain summaries or specific datasets and parameters contained within. For example object$data will return: (a) features, (b) planning units, (c) an intersection call rij_matrix and more information.",
    "crumbs": [
      "Problem creation",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Create and understand planning problems</span>"
    ]
  },
  {
    "objectID": "chapters/Problemcreation.html#different-datasets-for-planning",
    "href": "chapters/Problemcreation.html#different-datasets-for-planning",
    "title": "3  Create and understand planning problems",
    "section": "3.3 Different datasets for planning",
    "text": "3.3 Different datasets for planning\nIn this tutorial we use throughout gridded datasets. However it should be noted that - internally - prioritizr does not operate on spatial files but on tabular data. This is also true when not gridded but vector data are provided.\nWhy is this relevant to know? When creating a problem with spatial data (gridded or vector files), at the time of problem creation these data are internally converted into large tabular data. When planning over many species or planning units it can be computational efficient to not have prioritizr, but to do this conversion directly and then supply tabular data.\n\nTypical steps involved here are:\n\nConverting gridded planning unit data to a table in long form (row) containing both the cell id, the planning unit id and the cost\nConvert the features into a long table containing the planning unit id, the feature id (and name) and the amount stored.\nIntersecting the tables created in step 1) and 2)\nPreparing any other tables for weights or targets, aligned with the planning unit id.\n\n\n\n\n\n\n\n\nNote\n\n\n\nAnother context might be when data has already been formatted for use in another software such as Marxan. Prioritizr is able to directly use the formatted tables prepared for a typical Marxan application, thus making it easy to switch between software.",
    "crumbs": [
      "Problem creation",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Create and understand planning problems</span>"
    ]
  },
  {
    "objectID": "chapters/SolutionInterpretation.html",
    "href": "chapters/SolutionInterpretation.html",
    "title": "4  Solving and interpreting solutions",
    "section": "",
    "text": "4.1 Find a solution for a conservation problem\nIn the previous section we defined a conservation problem based on a planning unit file, features, the specification of an objective function and decision variable. We also added a solver which we can now use to find a solution to the problem specified.\nlibrary(rcbc) # Load the library for the solver just to be sure!\n# solve and create the solution \ns &lt;- solve(p)\nRunning this code will create a lot of output in the terminal and different solvers make different outputs and take different length of times to create solutions (they are effectively external software of varying sophistication). You can pipe in a different solver (such as add_highs_solver()) to test this out. See also Hanson et al. (2019)",
    "crumbs": [
      "Solving a problem",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Solving and interpreting solutions</span>"
    ]
  },
  {
    "objectID": "chapters/SolutionInterpretation.html#plot-the-solution",
    "href": "chapters/SolutionInterpretation.html#plot-the-solution",
    "title": "4  Solving and interpreting solutions",
    "section": "4.2 Plot the solution",
    "text": "4.2 Plot the solution\nThe output of the solved problem from above is essentially a spatial raster that can be plotted.\n\n# plot the solution map\nplot(s,  col = viridisLite::mako(n = 10, direction = -1), axes = F)\n\n\n\nWith the specified objective function, can you summarize the amount of area contained in the solution? How much would you expect?",
    "crumbs": [
      "Solving a problem",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Solving and interpreting solutions</span>"
    ]
  },
  {
    "objectID": "chapters/SolutionInterpretation.html#calculate-performance-evaluation-metrics",
    "href": "chapters/SolutionInterpretation.html#calculate-performance-evaluation-metrics",
    "title": "4  Solving and interpreting solutions",
    "section": "4.3 Calculate performance evaluation metrics",
    "text": "4.3 Calculate performance evaluation metrics\nNow that we have created a solution and visualized it, the next obvious question would be: How good is it? What are we conserving and what maybe not? These are critical questions for any SCP application and different problem formulations will achieve different levels of representation. Performance metrics are usually used to answer such questions in any SCP workflow, and they can assess a solution based on its spatial distribution and/or the features conserved within.\nDuring the problem setup we defined a set of targets for each feature, so naturally a question could be for how many species we reach the target and also how far are we off (see also Jantke et al. (2019)). We used a minimum shortfall objective, thus our objective is to minimize the shortfall (e.g. distance) between the amount covered by the feature as constrained by the budget. Thus we can most feasibly assess the performance of this solution for the species by assessing their representation and their target shortfall.\n\n# In Prioritizr there are convenience functions that can summarize the \n# coverage of species in terms of amount held \n1rpz_target_spp &lt;- eval_target_coverage_summary(p, s)\n\n# mean representation across all species \n2mean(rpz_target_spp$relative_held)\n\n## mean target shortfall across all species \n3mean(rpz_target_spp$relative_shortfall)\n\n\n1\n\nThis calculates the coverage of the features (taken from the problem) over the solution, also providing the initial amount.\n\n2\n\nHere we calculate mean representation, e.g. how much habitat is held by the solution across all features.\n\n3\n\nThis calculate the average shortfall, so the difference between held amount and target across features.",
    "crumbs": [
      "Solving a problem",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Solving and interpreting solutions</span>"
    ]
  },
  {
    "objectID": "chapters/SolutionInterpretation.html#portfolios",
    "href": "chapters/SolutionInterpretation.html#portfolios",
    "title": "4  Solving and interpreting solutions",
    "section": "5.1 Portfolios",
    "text": "5.1 Portfolios\nOne of the key principles of exact algorithms is to identify solutions that are close as possible to the optimum (e.g. the best possible) as well as being able to quantify the gap between the found solution and an optimum. This differentiates them for example from other prioritization software where often ‘selection frequencies’ returned (Marxan).\nHowever, in practice it can also be useful to obtain not only the best or optimal solution, but also the next best or a small portfolio of options (like the top 10).\n\n\n\n\n\n\nPortfolio methods\n\n\n\nThere are different portfolio methods (random, shuffle, cut, gap, etc…) available that provide different outputs, note that many portfolio methods are only available for Gurobi. See the help file for alternatives when in doubt.\n\n\n\n# For this portfolio example we again add create a solution,\n# but specificy a cut portfolio with the top 10 solutions.\nsp &lt;- solve(p_alps |&gt;  add_cuts_portfolio(number_solutions = 10) ) \n\n# Reduce them into one\nsp &lt;- Reduce(c,sp)\nnames(sp) &lt;- paste0(\"top\",1:10)\n\n# These portfolios could again be used to investigate a selection frequency\n# in these near-optimal solutions \n\nsp |&gt; sum() |&gt; \n  plot(main = \"Portfolio selection frequency\")\n\n\n\n\nSelection frequency of near-optimal solutions\n\n\n\n\n\n\nAlbuquerque, F. & Beier, P. (2015). Rarity-weighted richness: A simple and reliable alternative to integer programming and heuristic algorithms for minimum set and maximum coverage problems in conservation planning. PloS one, 10, e0119905.\n\n\nHanson, J.O., Schuster, R., Strimas-Mackey, M. & Bennett, J.R. (2019). Optimality in prioritizing conservation projects. Methods in Ecology and Evolution, 10, 1655–1663.\n\n\nJantke, K., Kuempel, C.D., McGowan, J., Chauvenet, A.L. & Possingham, H.P. (2019). Metrics for evaluating representation target achievement in protected area networks. Diversity and Distributions, 25, 170–175.\n\n\nKukkala, A.S. & Moilanen, A. (2013). Core concepts of spatial prioritisation in systematic conservation planning. Biological Reviews, 88, 443–464.",
    "crumbs": [
      "Solving a problem",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Solving and interpreting solutions</span>"
    ]
  },
  {
    "objectID": "chapters/ObjectiveFunctions.html",
    "href": "chapters/ObjectiveFunctions.html",
    "title": "5  Objective functions",
    "section": "",
    "text": "5.1 Target-based objective functions",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Objective functions</span>"
    ]
  },
  {
    "objectID": "chapters/ObjectiveFunctions.html#target-based-objective-functions",
    "href": "chapters/ObjectiveFunctions.html#target-based-objective-functions",
    "title": "5  Objective functions",
    "section": "",
    "text": "5.1.1 Minimum set\nThe minimum set objective function is the most commonly applied on and also the one exclusively supported by the popular Marxan software (see Ball et al. (2009), and https://marxansolutions.org/). It does not use budgets, but rather tries to identify the minimum amount of area that would satisfy all targets.\n\n\n\n\n\n\nNote\n\n\n\nIf the feature targets are too ambitious it might not be feasible to find a solution for a problem specified with this objective function. Similarly if all targets are set to 100% it naturally will require all PU where the features are present.\n\n\n\n# Define a minimum set problem and solve\ns1 &lt;- problem(PU, spp) |&gt;                     \n1  add_min_set_objective() |&gt;\n  add_relative_targets(targets = 0.3) |&gt;     \n  add_binary_decisions() |&gt;                  \n  add_default_solver() |&gt; \n  solve()\n\n\n1\n\nDefined here. If no targets are specified, an error will be raised.\n\n\n\n\n\n\n\nA minimum set objective function\n\n\n\n\n5.1.2 Maximum coverage objective\nThe next very commonly used objective function is the maximum coverage objective. This objective seeks to reach as many targets as possible without exceeding a set budget and meeting any cost. Here it differs from the minimum set problem as it is also constrained by a budget and not only by the targets ( Cabeza & Moilanen (2001) ).\nMaximum coverage solutions often benefit from additional constraints or penalties that help to prevent the occurrence of many small fragmented patches.\n\n\n\n\n\n\nNote\n\n\n\nIn prioritizr this objective function is (confusingly) called “add_max_features_objective()”\n\n\n\n# A dummy 30% of PU area budget\nbudget.area &lt;- round(0.3 * terra::global(PU,\"sum\",na.rm=T)[,1])\n\ns2 &lt;- problem(PU, spp) |&gt;    \n1  add_max_features_objective(budget = budget.area)  |&gt;\n2  add_relative_targets(targets = 0.3)  |&gt;\n  add_binary_decisions() |&gt;                                        \n  add_default_solver() |&gt; \n  solve()\n\n\n1\n\nSets the objective using the budget specified above.\n\n2\n\nDummy targets to secure at least 30% of each feature distribution while staying within the budget. Given the large area budget, this should be easy to solve.\n\n\n\n\n\n\n\nMaximum coverage objective function\n\n\n\n\n5.1.3 Minimum shortfall\nClosely related to the maximum coverage objective function is the (new’ish) minimum shortfall objective. This objective function tries to, instead of maximizing the coverage of features targets, minimizes the difference between the target and amount in the solution ( Arponen et al. (2005)). Because of the way it is formulated, it is particular useful for conservation problems that have proportional allocation and intend to have benefits increase linearly (Jung et al. (2021)).\nIn the example below we try to emulate that by trying to secure not only the distribution of tree species but also a reasonable amount of greenness (NDVI). For the latter we set the target to 100%, thus aiming to secure as much as we can together with the other targets.\nSensu Jung et al. (2021) it can also be beneficial here to specify weights particular for features that are numerically underrepresented (if the goal is equivalent representation in the solution).\n\n# A dummy 30% of PU area budget\nbudget.area &lt;- round(0.3 * terra::global(PU,\"sum\",na.rm=T)[,1])\n\n# Define targets\n1tr &lt;- matrix(nrow = terra::nlyr(spp)+1)\ntr[,1] &lt;- .3\n2tr[nrow(tr),] &lt;- 1\n\n3s3 &lt;- problem(PU, c(spp, ndvi)) |&gt;\n4  add_min_shortfall_objective(budget = budget.area)  |&gt;\n5  add_relative_targets(targets = tr)  |&gt;\n  add_binary_decisions() |&gt;                                        \n  add_default_solver() |&gt; \n  solve()\n\n\n1\n\nWe set the manual relative targets here equal to the number of features in the problem. Note the +1 to account for the added NDVI.\n\n2\n\nTarget for the last feature (NDVI) set to 100%, thus will never be reached.\n\n3\n\nAdding both species and NDVI layer here as a proxy of vegetation greenness\n\n4\n\nThe minimum shortfall objective with the 30% budget.\n\n5\n\nAdding the manually defined targets by feature from above here.\n\n\n\n\n\n\n\nA minimum shortfall solution with vegetation amount\n\n\n\n\n5.1.4 Minimum shortfall (largest)\nThis objective function is very similar to the one above, with the notable difference being mathematically that it minimizes the largest target shortfall, instead of the total (weighted sum) of all target shortfalls.\n\n# Budgets and targets as for minimum shortfall objective!\n\ns4 &lt;- problem(PU, c(spp, ndvi)) |&gt;                                  \n  add_min_largest_shortfall_objective(budget = budget.area)  |&gt;       \n  add_relative_targets(targets = tr)  |&gt;                              \n  add_binary_decisions() |&gt;                                        \n  add_default_solver() |&gt; \n  solve()\n\n\n\n\nMinimizing the largest shortfall instead of the sum across features\n\n\n\n\n5.1.5 Other objective functions (phylogenetic)\nThere are two more objective functions supported by the package that are specifically customized towards phylogenetic data and inter-species relationships. Since those are rather specific, we do not cover them specifically in this tutorial. You can read more about them here and here if of interest.",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Objective functions</span>"
    ]
  },
  {
    "objectID": "chapters/ObjectiveFunctions.html#non-target-based-objective-functions",
    "href": "chapters/ObjectiveFunctions.html#non-target-based-objective-functions",
    "title": "5  Objective functions",
    "section": "5.2 Non-target based objective functions",
    "text": "5.2 Non-target based objective functions\n\n5.2.1 Maximum utility\nThe maximum utility objective function is one of the objective functions that does not require any targets. It essentially maximizes utility (or feature abundance) within a given budget across features.\n\n\n\n\n\n\nWarning\n\n\n\nBecause of the way it is set up mathematically it can be biased towards areas where particular common species occur as it does maximize across all features equally. The use of weights, costs or penalities is thus highly recommended.\n\n\n\n# A dummy 30% of PU area budget\nbudget.area &lt;- round(0.3 * terra::global(PU,\"sum\",na.rm=T)[,1])\n\ns5 &lt;- problem(PU, spp) |&gt;    \n1  add_max_utility_objective(budget = budget.area)  |&gt;\n  add_binary_decisions() |&gt;                  \n  add_default_solver() |&gt; \n  solve()\n\n\n1\n\nNote the difference in name (utility vs coverage). The maximum utility objective does not require targets, only a specified budget.\n\n\n\n\n\n\n\nMaximum utility objective function solution\n\n\n\n\n5.2.2 Maximum cover\nAnother objective function without any targets is the maximum coverage objective function. This searches for solutions that represent at least one instance of as many features as possible within a given budget.\nSince it does not aim to secure as much as possible, only at least a single PU containing the features, this objective function is usually used for SCP problems where features are highly compartmentalized and a large number of categorical and/or continuous layers is used.\n\n\n\n\n\n\nNote\n\n\n\nNot to be confused with the “add_max_features_objective()” objective function!\n\n\n\n# We subset the data to the alps here for demonstration purposes\nalps &lt;- sf::st_read('data/AlpineConvention.shp') |&gt;\n  sf::st_transform(crs = sf::st_crs(4326))\n\nPU_alps &lt;- PU |&gt; terra::crop(alps) |&gt; terra::mask(alps)\nPA_alps &lt;- PA |&gt; terra::crop(alps) |&gt; terra::mask(alps)\nstPA_alps &lt;- stPA |&gt; terra::crop(alps) |&gt; terra::mask(alps)\nspp_alps &lt;- spp |&gt; terra::crop(alps) |&gt; terra::mask(alps)\nspp.rcp85_alps &lt;- spp.rcp85 |&gt; terra::crop(alps) |&gt; terra::mask(alps)\n\n# We will modify some features for the use of this objective function.\n# Specifically we create reclassified versions of features and protected areas\n1spp1 &lt;- c(PA_alps * spp_alps); names(spp1) &lt;- paste0(\"currentpa_\",names(spp))\n2spp2 &lt;- c(stPA_alps * spp_alps); names(spp2) &lt;- paste0(\"currentstpa_\",names(spp))\nspp3 &lt;- c(PA_alps * spp.rcp85_alps); names(spp3) &lt;- paste0(\"futurepa_\",names(spp.rcp85))\n3\nspp4 &lt;- c(stPA_alps * spp.rcp85_alps); names(spp4) &lt;- paste0(\"futurestpa_\",names(spp.rcp85))\n4\n# Combine all\nspp_pa &lt;- c(spp1,spp2,spp3,spp4)\n\n# A dummy 30% of PU area budget\nbudget.area &lt;- round(0.3 * terra::global(PU_alps,\"sum\",na.rm=T)[,1])\n\n5s6 &lt;- problem(PU_alps, spp_pa) |&gt;\n6  add_max_cover_objective(budget = budget.area)  |&gt;\n  add_binary_decisions() |&gt;                  \n  add_default_solver() |&gt; \n  solve()\n\n\n1\n\nGet the share of the current range per species covered by protected areas\n\n2\n\nGet the share of the current range per species covered by strictly protected areas\n\n3\n\nGet the share of the future range per species covered by protected areas\n\n4\n\nGet the share of the future range per species covered by strictly protected areas\n\n5\n\nDefine the problem with the features created above (number= 268)\n\n6\n\nMaximum coverage objectives requires only a budget.\n\n\n\n\n\n\n\nMaximum coverage objective function\n\n\nThe PU selected in the solution above ensure that each of the 268 features considered (current and future protected species) are covered at least once somewhere in the study region.\n\n\n\n\nAlagador, D. & Cerdeira, J.O. (2020). Revisiting the minimum set cover, the maximal coverage problems and a maximum benefit area selection problem to make climate-change-concerned conservation plans effective. Methods in Ecology and Evolution, 11, 1325–1337.\n\n\nArponen, A., Heikkinen, R.K., Thomas, C.D. & Moilanen, A. (2005). The value of biodiversity in reserve selection: Representation, species weighting, and benefit functions. Conservation Biology, 19, 2009–2014.\n\n\nBall, I.R., Possingham, H.P. & Watts, M. (2009). Marxan and relatives: Software for spatial conservation prioritisation. Spatial conservation prioritisation: Quantitative methods and computational tools, 14, 185–196.\n\n\nBeyer, H.L., Dujardin, Y., Watts, M.E. & Possingham, H.P. (2016). Solving conservation planning problems with integer linear programming. Ecological Modelling, 328, 14–22.\n\n\nCabeza, M. & Moilanen, A. (2001). Design of reserve networks and the persistence of biodiversity. Trends in ecology & evolution, 16, 242–248.\n\n\nJung, M., Arnell, A., De Lamo, X., Garcı́a-Rangel, S., Lewis, M., Mark, J., Merow, C., Miles, L., Ondo, I., Pironon, S. & others. (2021). Areas of global importance for conserving terrestrial biodiversity, carbon and water. Nature Ecology & Evolution, 5, 1499–1509.",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Objective functions</span>"
    ]
  },
  {
    "objectID": "chapters/ProblemComplexity.html",
    "href": "chapters/ProblemComplexity.html",
    "title": "6  Adding complexity to conservation planning",
    "section": "",
    "text": "6.1 Modify targets\nInstead of assigning equal targets to all features, let’s use log-linear targets, so that: features that have a smaller range size (e.g. 10 grid cells) get a target of 100% (their target is their entire range size); and features that are widespread (e.g. with a range size of at least 10,000 grid cells) have a target of 50% of their range size.\np1 &lt;- problem(PU, spp)%&gt;%\n  add_min_shortfall_objective(budget = budget.area)%&gt;%\n  add_loglinear_targets(10, 1, 10^4, 0.5) %&gt;% \n  add_cbc_solver()%&gt;% \n  add_proportion_decisions()\n\ns1 &lt;- solve(p1)\n\n# plot map\n\nplot(s1)\nNote: targets can be informed by a combination of range size and red list status (see Jung et al. (2021) )",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Adding complexity to conservation planning</span>"
    ]
  },
  {
    "objectID": "chapters/ProblemComplexity.html#add-feature-specific-weights",
    "href": "chapters/ProblemComplexity.html#add-feature-specific-weights",
    "title": "6  Adding complexity to conservation planning",
    "section": "6.2 Add feature specific weights",
    "text": "6.2 Add feature specific weights\n\np2 &lt;- p1 %&gt;%\n  add_feature_weights(redlist.trees$weight)\n\ns2 &lt;- solve(p2)\nplot(s2) \n\n\nNotice how in this case the solution does not change drastically, since only a few species are listed as vulnerable.",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Adding complexity to conservation planning</span>"
    ]
  },
  {
    "objectID": "chapters/ProblemComplexity.html#plan-for-future-distributions-under-climate-change",
    "href": "chapters/ProblemComplexity.html#plan-for-future-distributions-under-climate-change",
    "title": "6  Adding complexity to conservation planning",
    "section": "6.3 Plan for future distributions under climate change",
    "text": "6.3 Plan for future distributions under climate change\n\n## create problem with future distributions as features:\np2_bis &lt;- problem(PU, spp.rcp85)%&gt;%\n  add_min_shortfall_objective(budget = budget.area)%&gt;%\n  add_loglinear_targets(10, 1, 10^4, 0.5) %&gt;%\n  add_feature_weights(redlist.trees$weight) %&gt;%\n  add_cbc_solver()%&gt;%\n  add_proportion_decisions()  ## entire grid cells (planning units) will be selected in the solution rather than a proportion\n\ns2_bis &lt;- solve(p2_bis)\n\nWhich sites emerge as top priorities for these species, in both current and future climate conditions?\n\nmean_s_climate &lt;- mean(s2, s2_bis)\n\nplot(mean_s_climate, col = viridisLite::mako(n = 1, direction = -1), axes = F)",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Adding complexity to conservation planning</span>"
    ]
  },
  {
    "objectID": "chapters/ProblemComplexity.html#add-protected-areas",
    "href": "chapters/ProblemComplexity.html#add-protected-areas",
    "title": "6  Adding complexity to conservation planning",
    "section": "6.4 Add protected areas",
    "text": "6.4 Add protected areas\n\n### try with locked in constraints:\n\np3 &lt;- p2 %&gt;%\n  add_locked_in_constraints(PA)  \n\ns3 &lt;- solve (p3) \n\nIn this case the budget cannot be met, because protected areas (small or large) are present in more than 30% of all planning units. The locked in constraints functionality locks in cells that have non zero and non NA values. This functionality is not suitable for European PA at 10x10k resolution: we would need, for example, to change the PA layer to a binary layer with a threshold.\nLet’s try again with the manual bounded constraints functionality to incorporate the proportion of the planning unit that is currently protected.\n\n## create manual bounded constraints dataframe with protected area coverage per planning unit\n1pa_constraints &lt;- data.frame(pu = cells(PA),\n2                             lower = unname(PA[!is.na(PA)]),\n3                             upper = 1)\n\np3 &lt;- p2 %&gt;%\n4  add_manual_bounded_constraints(pa_constraints)\n\n\ns3 &lt;- solve(p3)\n\n\n1\n\ngrid cell ID\n\n2\n\nlower bound that needs to be included in the solution = proportion of grid cell already protected\n\n3\n\nupper bound set to 1 everywhere, so that the whole planning unit can be selected\n\n4\n\nlocks in proportional PA coverage per planning unit\n\n\n\n\nNow, let’s find top priorities for the expansion of existing protected areas but that uses projections of species distributions under future climate scenario RCP8.5\n\n## create problem with future distributions as features:\np3_bis &lt;- problem(PU, spp.rcp85)%&gt;%\n  add_min_shortfall_objective(budget = budget.area)%&gt;%\n  add_loglinear_targets(10, 1, 10^4, 0.5) %&gt;%\n  add_feature_weights(redlist.trees$weight) %&gt;%\n  add_manual_bounded_constraints(pa_constraints)%&gt;% ## to lock in proportional PA coverage per planning units\n  add_cbc_solver()%&gt;%\n  add_proportion_decisions()  ## entire grid cells (planning units) will be selected in the solution rather than a proportion\n\ns3_bis &lt;- solve(p3_bis)\n\nWhat areas emerge as climatically resilient protected area expansion priorities for these 67 species? Average across the two solutions that expand on protected areas with current and future distributions:\n\nmean_s_climate_PA &lt;- mean(s3, s3_bis)\n\nexpansion_climate_PA &lt;- mean_s_climate_PA - PA\n\nplot(c(mean_s_climate_PA, expansion_climate), axes = F, col = viridisLite::mako(n = 10, direction = -1), main = c(\"Average solution with \\n current and future SDM,  including PA\",\"Average expansion priorities with \\n current and future SDM\"))",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Adding complexity to conservation planning</span>"
    ]
  },
  {
    "objectID": "chapters/ProblemComplexity.html#add-locked-out-constraints",
    "href": "chapters/ProblemComplexity.html#add-locked-out-constraints",
    "title": "6  Adding complexity to conservation planning",
    "section": "6.5 Add locked-out constraints",
    "text": "6.5 Add locked-out constraints\n\np4 &lt;- p3 %&gt;%\n1  add_locked_out_constraints(locked.out.bin)\n  \n\ns4 &lt;- solve(p4)\n\n\n1\n\nThis MUST come AFTER the manual bounded constraints (if using), otherwise locked out constraints are ignored. Note that locked out constraints can sometimes also conflict with the manual bounded constraints, in other words locked in PA might become locked out…",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Adding complexity to conservation planning</span>"
    ]
  },
  {
    "objectID": "chapters/ProblemComplexity.html#section",
    "href": "chapters/ProblemComplexity.html#section",
    "title": "6  Adding complexity to conservation planning",
    "section": "6.6 ",
    "text": "6.6",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Adding complexity to conservation planning</span>"
    ]
  },
  {
    "objectID": "chapters/ProblemComplexity.html#adding-socio-economic-costs",
    "href": "chapters/ProblemComplexity.html#adding-socio-economic-costs",
    "title": "6  Adding complexity to conservation planning",
    "section": "6.7 Adding (socio-economic) costs",
    "text": "6.7 Adding (socio-economic) costs\nIn prioritizr, the actual “cost” is tied to the value of the planning units, which then determines the budget. Since we need to express the budget in terms of number of grid cells and not overall socio-economic cost of the solution, we need to include actual socio-economic constraints as linear penalties.\nLinear penalties can be used to avoid the selection of sites with a high value, for example, socio-economic costs if available. Here, we use the human modification index as a penalty.\n\np5 &lt;- p4 %&gt;%\n  add_linear_penalties(penalty = 1, data = gHM) ## note that when penalty score is set too high, this sometimes prevents the budget area from being met\n\ns5 &lt;- solve (p5)\n\nNote: if one wanted to express the entire budget of the problem in monetary terms, the costs would need to be included in the planning units data.",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Adding complexity to conservation planning</span>"
    ]
  },
  {
    "objectID": "chapters/ProblemComplexity.html#linear-penalties-with-negative-penalty-score",
    "href": "chapters/ProblemComplexity.html#linear-penalties-with-negative-penalty-score",
    "title": "6  Adding complexity to conservation planning",
    "section": "6.8 Linear penalties with negative penalty score",
    "text": "6.8 Linear penalties with negative penalty score\nLinear penalties can also be used with a negative penalty score, to nudge the selection of sites with a high value. For example, one may use linear penalties with a negative penalty score to incorporate pre-defined ecological corridors; known climate refugia; intactness; etc.\nHere, we use NDVI as an example, which can be interpreted as a proxy for vegetation health.\n\np6 &lt;- p5 %&gt;%\n1  add_linear_penalties(penalty = -1, data = ndvi)\n\ns6 &lt;- solve(p6)\n\n\n1\n\nNegative penalty score can be used if we want to nudge selection of sites with high value in the spatial data layer.\n\n\n\n\nA word of caution: sometimes adding constraints and penalties will tend to drive the solution much more strongly than the biodiversity features themselves. To limit the influence of the penalty data layer, you can consider decreasing the penalty value.",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Adding complexity to conservation planning</span>"
    ]
  },
  {
    "objectID": "chapters/ProblemComplexity.html#decision-variables",
    "href": "chapters/ProblemComplexity.html#decision-variables",
    "title": "6  Adding complexity to conservation planning",
    "section": "6.9 Decision variables",
    "text": "6.9 Decision variables\nSo far, we solved problems as proportional decisions. Proportional decisions means that proportions of planning units can be selected in the solution. This typically solve faster and better than binary decisions.\nLet’s try solving the problem with a binary decision (i.e. a planning unit gets selected, or not).\n\nPA_large &lt;- PA\n1PA_large[PA_large&lt;0.5] &lt;- 0\n\npa_constraints_bin &lt;- data.frame(pu = cells(PA_large), #  cell ID\n                               lower = unname(PA_large[!is.na(PA_large)]), \n                               upper = 1) \n\n## create problem with binary decision:\n2p7 &lt;- problem(PU, spp)%&gt;%\n  add_min_shortfall_objective(budget = budget.area)%&gt;%\n  add_loglinear_targets(10, 1, 10^4, 0.5) %&gt;%\n  add_feature_weights(redlist.trees$weight) %&gt;%\n  add_manual_bounded_constraints(pa_constraints_bin)%&gt;% \n  add_locked_out_constraints(locked.out.bin) %&gt;%\n  add_linear_penalties(1, data = gHM) %&gt;% \n  add_linear_penalties(-1, data = ndvi) %&gt;% \n  add_cbc_solver()%&gt;%\n3  add_binary_decisions()\n\ns7 &lt;- solve(p7)\n\n\n1\n\nneed to use different constraints for Protected areas since the 30% budget cannot be met with binary decision + manually bounded constraints\n\n2\n\nrewrite problem since we cannot overwrite the previously defined decision variable.\n\n3\n\nPlanning units (grid cells) will be either selected, or not selected, in the solution rather than a proportion.",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Adding complexity to conservation planning</span>"
    ]
  },
  {
    "objectID": "chapters/ProblemComplexity.html#modify-the-budget",
    "href": "chapters/ProblemComplexity.html#modify-the-budget",
    "title": "6  Adding complexity to conservation planning",
    "section": "6.10 Modify the budget",
    "text": "6.10 Modify the budget\nFor example, we might be interested in finding top priorities for 10% strict protection. To do that, we need to change the budget, and the protected area layer, to find priorities that complement and expand on strictly protected areas only (IUCN i and II).\n\n## modify the budget: e.g. 10% top priorities that expand on strict protected areas\nbudget.area &lt;- round(0.1 * length(cells(PU))) \n\n\nstpa_constraints &lt;- data.frame(pu = cells(stPA),\n                             lower = unname(stPA[!is.na(stPA)]), \n                             upper = 1) \n\n## create new problem for expansion of strict protected areas: new budget, new manual bounded constraints.\np8 &lt;- problem(PU, spp)%&gt;%\n  add_min_shortfall_objective(budget = budget.area)%&gt;%\n  add_loglinear_targets(10, 1, 10^4, 0.5) %&gt;%\n  add_feature_weights(redlist.trees$weight) %&gt;%\n  add_manual_bounded_constraints(stpa_constraints)%&gt;%\n  add_locked_out_constraints(locked.out.bin) %&gt;%\n  add_linear_penalties(1, data = gHM) %&gt;%\n  add_linear_penalties(-1, data = ndvi) %&gt;%\n  add_cbc_solver()%&gt;%\n  add_proportion_decisions()\n\ns8 &lt;- solve(p8)",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Adding complexity to conservation planning</span>"
    ]
  },
  {
    "objectID": "chapters/ProblemComplexity.html#section-1",
    "href": "chapters/ProblemComplexity.html#section-1",
    "title": "6  Adding complexity to conservation planning",
    "section": "6.11 ",
    "text": "6.11 \n\n\n\n\nJung, M., Arnell, A., De Lamo, X., Garcı́a-Rangel, S., Lewis, M., Mark, J., Merow, C., Miles, L., Ondo, I., Pironon, S. & others. (2021). Areas of global importance for conserving terrestrial biodiversity, carbon and water. Nature Ecology & Evolution, 5, 1499–1509.",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Adding complexity to conservation planning</span>"
    ]
  },
  {
    "objectID": "chapters/CompareSolutions.html",
    "href": "chapters/CompareSolutions.html",
    "title": "7  Compare and analyse different solutions",
    "section": "",
    "text": "7.1 Compare spatial outputs\n# plot all solutions to compare them\nplot(c(s, s1, s3, s3_bis, s4, s5, s6, s7, s8),\n     main = c(\"basic problem\", \"add log linear targets\",\n              \"add protected areas\", \"plan for future distributions\" , \"add locked-out constraints\", \"add gHM\", \"add NVDI\",\n              \"binary decision\", \"change area budget to 10 percent strict PA expansion\"),\n     col = viridisLite::magma(n = 100, direction = -1), \n     axes = FALSE)\n##### map safe bets for expansion priorities across all variations of the problems expanding on protected areas ##\nmean_s &lt;- mean(s3, s3_bis, s4, s5, s6, s7)\n\nexp &lt;- mean_s - PA \n\n1exp[exp&lt;0]&lt;-0\n\n## Compare this map with the one obtained without considering additions in solutions s4-s7 : how different are they?\n\nplot(c(expansion_climate, exp),  col = viridisLite::mako(n = 10, direction = -1), main = c(\"Average expansion priorities \\n for current and future SDM\", \"Average expansion priorities \\n solutions s3 to s7\"), axes = F)\n\n\n1\n\nset negative values to zero (these correspond to planning units that were locked out by urban/forestry layer, but that are currently protected)\nRemember that the solutions are highly dependent on methodological choices, and specifically on the input data (features, costs), constraints, and the objective function used, as well as the software.\nAlso note that, the more features are included, the more the solution converges, hence it is always better to include as many high-quality features data as possible, to increase comprehensiveness of the planning and obtain an ecologically robust solution.",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Compare and analyse different solutions</span>"
    ]
  },
  {
    "objectID": "chapters/CompareSolutions.html#compare-performance-of-solutions",
    "href": "chapters/CompareSolutions.html#compare-performance-of-solutions",
    "title": "7  Compare and analyse different solutions",
    "section": "7.2 Compare performance of solutions",
    "text": "7.2 Compare performance of solutions\nWe can compare the performance of solutions for the species by assessing their representation in each solution as well as the target shortfall.\n\nlibrary(ggplot2)\n\n# First we create rasterstack of solutions for which you want to compare performance\n# here, we compare the solutions that optimize for current distributions within 30% budget area\n\nsolutions &lt;- c(s, s1, s2, s3, s4, s5, s6, s7)\nnames(solutions) &lt;- c(\"basic problem\", \"add log linear targets\", \"add weights\",\n                      \"add protected areas\",  \"add locked-out constraints\", \"add gHM\", \"add NVDI\",\n                      \"binary decision\" )\n\n## analyse representation gains in the different solutions with a given budget\n## for individual species\nscenarios_performance_species &lt;- data.frame(solution = character(),\n                              feature = character(),\n                              class = character(),\n                              order = character(),\n                              relative_held = numeric(),  ## representation: percentage of distribution held in the solution\n                              relative_shortfall = numeric()) ## shortfall to target: how far from the area target for each species\n\n## loop across solutions to extract representations for species and target shortfall\nfor (i in 1:nlyr(solutions)){\n  cat(paste0(i, \" \\n\"))  # keep track\n  rpz.s_i &lt;- eval_target_coverage_summary(p1, solutions[[i]]) ## for each species. Note that here, we assess the target shortfall based on the targets defined in p1, i.e. log linear targets.\n  rpz.s_i$order &lt;- redlist.trees$order[match(rpz.s_i$feature, redlist.trees$spp_name)]\n  rpz.s_i$class &lt;- redlist.trees$class[match(rpz.s_i$feature, redlist.trees$spp_name)]\n  rpz.s_i$solution &lt;- names(solutions)[i]\n  rpz_i &lt;- as.data.frame(rpz.s_i)\n  scenarios_performance_species &lt;- rbind(scenarios_performance_species,\n                           rpz_i[, c(\"solution\", \"feature\",  \"class\",\"order\", \"relative_held\", \"relative_shortfall\")]\n                           )\n}\n\n\nscenarios_performance_species$solution &lt;- factor(scenarios_performance_species$solution, levels = names(solutions)) ## to plot solutions in the right order.\n\n## compare performance of different solutions in terms of representation\nggplot(scenarios_performance_species, aes(x = solution, y = relative_held)) +\n  geom_boxplot()+\n  theme_bw()\n\n\n\n# subdivide per groups of species to be more ecologically informative\nggplot(scenarios_performance_species, aes(x = solution, y = relative_held)) +\n  geom_boxplot(aes(fill = order), alpha = 0.2, outlier.size = 0)+\n  theme_bw()\n\n\n\n## group by Class instead of family\n## add jitter points to see individual species representations\nggplot(scenarios_performance_species, aes(x = solution, y = relative_held)) +\n  geom_boxplot(aes(fill = class), alpha = 0.2, outlier.size = 0)+\n  geom_point(aes(x = solution, y = relative_held, colour = class), position = position_jitterdodge())+\n  theme_bw()\n\n\n\n## compare performance of different solutions in terms of target shortfall\nggplot(scenarios_performance_species, aes(x = solution, y = relative_shortfall)) +\n  geom_boxplot(aes(fill = class), alpha = 0.2, outlier.size = 0)+\n  geom_point(aes(x = solution, y = relative_shortfall, colour = class), position = position_jitterdodge())+\n  theme_bw()\n\n\nWhat do these two performance metrics tell us?",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Compare and analyse different solutions</span>"
    ]
  },
  {
    "objectID": "chapters/CompareSolutions.html#sec-spatial-ranking",
    "href": "chapters/CompareSolutions.html#sec-spatial-ranking",
    "title": "7  Compare and analyse different solutions",
    "section": "7.3 Create a spatial ranking of conservation importance",
    "text": "7.3 Create a spatial ranking of conservation importance\nSometimes one may be interested in the relative ranking in the conservation value of planning units without a fixed budget. A rank map is one of the key outputs from Zonation. prioritizr does not provide such a rankmap, but we can make one by solving iteratively while gradually increasing the area in the solution (i.e. the budget). The average of all solutions can give a ranking of the grid cells in the study area in terms of conservation importance.\nLet’s produce a ranking map with increasing the budget. We will build on solution #3 that expands on protected areas for current distributions, but does not include other constraints. We will start with the existing protected area and incrementally add budget until the whole study area is reached. Then, we can average across all solutions to obtain the ranking.\n\n## initialise a raster stack with existing PA to store solutions as budget area increases.\nincremental.solutions &lt;- PA\n\nprotected.land &lt;-  round(sum(PA[PA&gt;0]))\ntotal.land &lt;- sum(PU[PU&gt;0])\n\nsteps &lt;- c(seq(from =protected.land, to = total.land, by = 5000 )[-1], total.land-1)\n\n## skip the first as this is the initial PA layer + add the total land amount\n## the argument \"by\" can be decreased for finer ranking.\n\n## Note: this will take a while (1-2 minutes per run)\nfor (budget.area in steps){\n  p_i &lt;- problem(PU, spp)%&gt;%\n    add_min_shortfall_objective(budget = budget.area)%&gt;%\n    add_loglinear_targets(10, 1, 10^4, 0.5) %&gt;%\n    add_feature_weights(redlist.trees$weight) %&gt;%\n    add_manual_bounded_constraints(pa_constraints)%&gt;%\n    add_cbc_solver()%&gt;%\n    add_proportion_decisions()\n\n  s_i &lt;- solve(p_i)\n  incremental.solutions &lt;- c(incremental.solutions, s_i)\n}\n\n\nranking.expansion.priorities &lt;- mean(incremental.solutions) - PA\n\nplot(ranking.expansion.priorities, col = viridisLite::magma(n = 100, direction =-1), axes = F, main = \"Rank map \\n protected area expansion priorities for current SDM\")",
    "crumbs": [
      "Adding complexity",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Compare and analyse different solutions</span>"
    ]
  },
  {
    "objectID": "chapters/Connectivity.html",
    "href": "chapters/Connectivity.html",
    "title": "8  Connectivity",
    "section": "",
    "text": "8.1 Boundary penalties\nThe inclusion of boundary penalties is one of the oldest and most widely applied ways of forcing a prioritization output (Ball et al. 2009). By setting a boundary length modifier (BLM) or penalty constant, we effectively penalize solutions that result in overly fragmented patches. Since it is a penality it does not fully prevent them however.\nUnfortunately, and similar to other penalty values, there are no specific guidelines of what might work or not, so often it might be worth exploring a few options.\nAs in previous tutorials we first load our data. However as noted above, we focus on the Alpine region only to make this interpretable. To do so we first crop and mask our PU and feature data to the alps.\n# Crop. Focus on the alps here\nalps &lt;- sf::st_read('extdata/boundary_alps/AlpineConvention.shp') |&gt;\n  sf::st_transform(crs = sf::st_crs(4326))\n\nPU &lt;- PU |&gt; terra::crop(alps) |&gt; terra::mask(alps)\nspp &lt;- spp |&gt; terra::crop(alps) |&gt; terra::mask(alps)\nNow we can create a conservation planning problem for this region.\n1p &lt;- problem(PU, spp) |&gt;\n2  add_min_set_objective() |&gt;\n3  add_relative_targets(targets = 0.3) |&gt;\n4  add_binary_decisions() |&gt;\n5  add_default_solver()\n\n\n1\n\nA problem with the cropped data (Planning units and features)\n\n2\n\nUsing a minimum set operation here.\n\n3\n\nArbitrary targets of 30% of the feature distribution\n\n4\n\nBinary decisions\n\n5\n\nUse the fastest solver installed/available (usually Gurobi or cbc)\nNow lets add some boundary constraints to the same problem.,\n# First we precompute the boundary matrix (large matrix of neighbourhoods)\nbm &lt;- boundary_matrix(PU)\n# Then we rescale it for better performance\nbm &lt;- rescale_matrix(bm)\n\n# Now create a new problem using the settings from above, but with a boundary penality\ns_blm &lt;- p |&gt;\n1  add_boundary_penalties(penalty = 1e-4, data = bm) |&gt;\n  solve()\n\n\n1\n\nSpecify a boundary penalty. Usually this requires some trial-and-error.\nAs you can see the solution is effectively more ‘clumped’. But what about the area selected? Do we need more area to get the best complementary solution here?\n# calculate costs (sum of area)\ndplyr::bind_rows(\n  eval_cost_summary(p, s),\n  eval_cost_summary(p, s_blm)\n)\n\n# Answer is...?",
    "crumbs": [
      "Advanced topics",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Connectivity</span>"
    ]
  },
  {
    "objectID": "chapters/Connectivity.html#boundary-penalties",
    "href": "chapters/Connectivity.html#boundary-penalties",
    "title": "8  Connectivity",
    "section": "",
    "text": "Boundary length modifier (BLM), which is effectively a penalty (Source: Marxan solutions)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPerformance\n\n\n\nBoundary length penalties generally solve faster with simpler objective functions, such as a minimum set objective function.",
    "crumbs": [
      "Advanced topics",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Connectivity</span>"
    ]
  },
  {
    "objectID": "chapters/Connectivity.html#connectivity-penalties",
    "href": "chapters/Connectivity.html#connectivity-penalties",
    "title": "8  Connectivity",
    "section": "8.2 Connectivity penalties",
    "text": "8.2 Connectivity penalties\nAnother more direct way to ingest some connectivity into a problem formulation is to use a certain auxillary layer, for example green infrastructure, (inverse) costs of transversal or connectivity estimates run through software like Circuitscape, as linear penalty. When including connectivity estimates as penalties in conservation planning we usually distinguish between symmetric and asymmetric penalties.\n\n8.2.1 Symmetric connectivity penalties\nSymmetric connectivity penalties describe information that is non-directional, in other words the same penalties apply when for example a species moves from west to east or from east to west across the study region (see also (Alagador et al. 2012)).\nIn the following example we again define a minimum set problem as before. We then load a pressure layer (the Human modification index) under the assumption that higher human modification values reduce the (structural) connectivity value of a landscape. Again we require a penalty term and it is advised to carefully calibrate this constant in practice.\n\n# Define a minimum set problem\np &lt;- problem(PU, spp) |&gt;                     \n  add_min_set_objective() |&gt;                 \n  add_relative_targets(targets = 0.3) |&gt;     \n  add_binary_decisions() |&gt;                  \n  add_default_solver() \n\n\n# Load the Human Modification index and clip to the alps\nHM &lt;- rast(\"extdata/gHM.tif\") |&gt; terra::crop(alps) |&gt; terra::mask(alps)\n\n# Now prepare the connectivity matrix and rescale\n1bm &lt;- connectivity_matrix(PU,HM)\n# rescale matrix\n2bm &lt;- rescale_matrix(bm)\n\n# Update the problem formulation and solve with a small penalty.\ns_con1 &lt;- p |&gt;\n3  add_connectivity_penalties(penalty = 1e-4, data = bm) |&gt;\n  solve()\n\nplot(s_con1)\n# It also possible to evaluate the connectivity values via\neval_connectivity_summary(p,s_con1, data = bm)\n\n\n1\n\nThis command calculates a cross-product between the Planning unit and a pressure layer\n\n2\n\nRescaling is usually necessary to achieve better convergence\n\n3\n\nThe Penalty constant chosen reflects the magnitude of influence dedicated to this layer.\n\n\n\n\n\n\n\nPrioritization with symmetric connectivity penalties\n\n\n\n\n\n\n\n\nInfluence of penalty values\n\n\n\nTry changing the penalty parameter. How do the results change? If you encounter unusual results (all values identical) the reason is often an inappropriate penalty.\nIn real world example it usually recommended to calibrate such quite parameters so as to ensure realistic outcomes. See this vignette for more information on how to do so.\n\n\nAnother alternative approach could be to not use a separate layer, but constrain the area-based prioritization by some prior knowledge about minimum or maximum distance constraints. For example, one can envisage a case where we know that most species are unlikely to disperse further than 10 km from any selected patch. In this case it can be beneficial to avoid prioritizing such areas for conservation to avoid further fragmentation and possibly extinction of local populations.\nLet’s try it out (Note: this can take quite a bit longer to solve):\n\n# Here we precompute a proximity matrix with maximum distance of about ~10km (WGS84 projection)\n1cm &lt;- proximity_matrix(PU, distance = 0.1)\n# rescale boundary data\ncm &lt;- rescale_matrix(cm)\n\n# Do one with boundary constraints\ns_con2 &lt;- p |&gt;\n  add_connectivity_penalties(penalty = 1e-4, data = cm) |&gt;\n  add_cbc_solver(time_limit = 240,first_feasible = TRUE) |&gt; \n  solve()\n\nplot(s_con2)\n\n\n1\n\nNote the different command compared to before. This calculates proximity constraints.\n\n\n\n\n\n\n\nProximity penalties(10km)\n\n\n\n\n\n\n\n\nTip\n\n\n\nThere is also a matrix function called ‘adjacency_matrix()’. Can you imagine what this one does?\n\n\n\n\n8.2.2 Asymmetric connectivity penalties\nOpposed to symmetric connectivity penalties (Section 8.2.1), asymmetric penalties have some kind of directionality. For example in situations where species can only move down PU such as rivers blocked by a dam, or for planning problems with migration corridors (south to north) ((Beger et al. 2010)). Adding this penalty to a problem penalizes solutions that have low directional connectivity among PU.\n\n# Make a directional dummy layer based on the cell numbers\ndummy &lt;- PU\ndummy[!is.na(PU)] &lt;- terra::cells(dummy)\n\n# Now prepare the connectivity matrix and rescale\n1cm &lt;- connectivity_matrix(PU, dummy)\n# rescale matrix\n2cm &lt;- rescale_matrix(cm, max = 1)\n\n# We only use the diagonal for this simple example, thus going north to south\n3cm &lt;- Matrix::triu(cm)\n\n# Update the problem formulation and solve with a penalty.\ns_asc &lt;- p |&gt;\n4  add_asym_connectivity_penalties(penalty = 1, data = cm) |&gt;\n  solve()\n\nplot(s_asc)\n\n\n1\n\nWe again create a connectivity matrix using the dummy cell numbers\n\n2\n\nRescale and make sure values are from 0 to 1 for better convergence.\n\n3\n\nWe take only the diagonal for simplicity. This effectively removes one geographical dimension (top to bottom).\n\n4\n\nSolve the solution. Note the higher penalty for this dummy example.\n\n\n\n\n\n\n\nAsymmetric connectivity penalty from North to South",
    "crumbs": [
      "Advanced topics",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Connectivity</span>"
    ]
  },
  {
    "objectID": "chapters/Connectivity.html#connectivity-constraints",
    "href": "chapters/Connectivity.html#connectivity-constraints",
    "title": "8  Connectivity",
    "section": "8.3 Connectivity constraints",
    "text": "8.3 Connectivity constraints\nSo far we have made use of penalties to nudge solutions into to being more connected or less fragmented. Penalties however can not guarantee per se that a solution satisfies the desired criteria for example having only a few rather than many continuous patches. Constraints force a solution to, regardless of the optimality gap used to generate a prioritization, always exhibit the intended characteristics (or being infeasible).\n\n8.3.1 Neighbour constraints\nThis simply constraint specifies that each selected PU has to have at least X neighbours in the solution.\n\n# Define a problem\np &lt;- problem(PU, spp) |&gt;\n  add_min_set_objective() |&gt;\n  add_relative_targets(targets = 0.3) |&gt;\n  add_binary_decisions() |&gt;\n  add_default_solver()\n\n# Obtain only solutions with PU that have at least 2 neighbouring PU\ns &lt;-\n  p %&gt;%\n1  add_neighbor_constraints(k = 2) %&gt;%\n  solve()\n\nplot(s)\n\n\n1\n\nTry changing the k parameter to 3 or 4. What happens?\n\n\n\n\n\n\n\nA solution with a hard connectivity constraint of having at least 2 neighbouring PUs\n\n\n\n\n8.3.2 Contiguity constraints\nOn the extreme end of the SLOSS (Single large vs several small) debate are single continuous reserves. Such planning solutions can be beneficial for example when the aim is to adequately conserve the most area under large budget constraints. For such cases prioritizr supports so called contiguity constraints, which form a single large reserve instead of multiple.\nContiguity constraints are very time-consuming to solve and an installation of a commercial solver (like Gurobi) is highly advised.\n\n# create problem with added contiguity constraints and solve it\ns2 &lt;-\n  p |&gt; \n  add_contiguity_constraints() |&gt; \n  add_relative_targets(targets = 0.1) |&gt; \n  add_gurobi_solver(time_limit = 2400, first_feasible = TRUE) |&gt; \n  solve()\n\n\n\n8.3.3 Linear constraints\nLinear constraints are not directly linked to connectivity, but can in theory used for this purpose (and more). Linear constraints simply specify that the solution has to satisfy a criteria, such as for example having at least XX% of area or covering at least YY% of ‘connectivity’ features. They are thus quite similar to including connectivity as a feature (Daigle et al. 2020) (see also below for connectivity features), but are implemented directly as constraints.\nFor example, in this problem formulation we constrain the solutions to only those that also contain a certain (admittedly) arbitrary amount of ‘greenness’ (quantified by the NDVI).\n\n# Load and clip the ndvi layer\nndvi &lt;- rast(\"extdata/ndvi.tif\") |&gt; crop(alps) |&gt; mask(alps)\n\n# The threshold for linear constraints. We want at least this much!\nthreshold &lt;- global(ndvi, \"sum\", na.rm = TRUE)[[1]] * 0.3\n\n# Update the solution.\ns3 &lt;-\n  p |&gt; \n  add_linear_constraints(\n1    data = ndvi, threshold = threshold, sense = \"&gt;=\"\n  ) |&gt; \n  solve()\n\nplot(s3)\n\n\n1\n\nWe specify a greater/equal sense here. Different directions such &lt; or &lt;= are also possible.\n\n\n\n\n\n\n\nA prioritization including certain minimal amounts of greenness as constraint\n\n\nCan you think of a reason why it might be beneficial to modify the input layers beforehand? Consider that it can incurs costs (in terms of area) to select PU as part of the solution.\n\n\n\n\n\n\nTip\n\n\n\nLinear constrains are extremely flexible and can be used to constrain priorities into many directions. For example, with them it is easily feasible to obtain a solution that satisfies at least 10% of total area over the studyregion, while maximizing target achievement.",
    "crumbs": [
      "Advanced topics",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Connectivity</span>"
    ]
  },
  {
    "objectID": "chapters/Connectivity.html#sec-connectivity-features",
    "href": "chapters/Connectivity.html#sec-connectivity-features",
    "title": "8  Connectivity",
    "section": "8.4 Connectivity features",
    "text": "8.4 Connectivity features\nAnother, relatively straight forward way, to ‘account’ for connectivity is to directly add features representing connectivity per se and ensure that solutions conserve not only the areas a species occurs in but also the area it transverse through. For example (Kujala et al. 2013) considered both current and future projected distributions of species (constrained by dispersal distance) to identify potential stepping stones or refugia in response to climate change. For a comprehensive overview see also the recent work on climate-smart metrics for conservation planning (Buenafe et al. 2023).\nAs an example here we aim to identify the top ‘priorities’ that account for present as well as future distributions of species in a simplified manner. This approach can certainly be improved further, for example by considering dispersal constraints or weights of present against future distributions (discounting), but illustrates the concept.\n\nbudget.area &lt;- round(0.3 * length(cells(PU))) ##  30 percent\n\n# Identify the solution for a maximum coverage problem and contemporary only\ns0 &lt;- problem(PU, spp) |&gt;\n  add_max_features_objective(budget = budget.area) |&gt; \n  add_relative_targets(targets = 0.3) |&gt;\n  add_binary_decisions() |&gt; \n  add_default_solver() |&gt; \n  solve()\n\n# Now add the future distributions of the species as well as their \nspp.list &lt;- list.files(path = \"extdata/SpeciesDistributions/\", full.names = T, recursive = T, pattern = \"tif$\")\nsppf &lt;- rast(spp.list[grep(\"rcp85\", spp.list)])\n# Crop and mask\nsppf &lt;- sppf |&gt; terra::crop(alps) |&gt; terra::mask(alps)\n\n# Add to stack\ns1 &lt;- problem(PU, c(spp, sppf)) |&gt;\n  add_max_features_objective(budget = budget.area) |&gt; \n1  add_relative_targets(targets = 0.3) |&gt;\n  add_binary_decisions() |&gt; \n  add_default_solver() |&gt; \n  solve()\n\n# Overlay and compare\n2comb &lt;- s0+s1 |&gt; as.factor()\nlevels(comb) &lt;- c(\"no priority\", \"current/future only\", \"current and future\")\nplot(comb, legend = \"bottom\")\n\n\n1\n\nNote that we specify identical targets for present/future. Ideally targets are specified by feature rather than flat as done here.\n\n2\n\nSince the decision variable is binary, we can simply sum the result.\n\n\n\n\n\n\n\nVertical connectivity with future projections\n\n\n\n\n\n\nAlagador, D., Trivino, M., Cerdeira, J.O., Bras, R., Cabeza, M. & Araujo, M.B. (2012). Linking like with like: Optimising connectivity between environmentally-similar habitats. Landscape Ecology, 27, 291–301.\n\n\nBall, I.R., Possingham, H.P. & Watts, M. (2009). Marxan and relatives: Software for spatial conservation prioritisation. Spatial conservation prioritisation: Quantitative methods and computational tools, 14, 185–196.\n\n\nBeger, M., Linke, S., Watts, M., Game, E., Treml, E., Ball, I. & Possingham, H.P. (2010). Incorporating asymmetric connectivity into spatial decision making for conservation. Conservation Letters, 3, 359–368.\n\n\nBeger, M., Metaxas, A., Balbar, A.C., McGowan, J.A., Daigle, R., Kuempel, C.D., Treml, E.A. & Possingham, H.P. (2022). Demystifying ecological connectivity for actionable spatial conservation planning. Trends in Ecology & Evolution, S0169534722002221.\n\n\nBuenafe, K.C.V., Dunn, D.C., Everett, J.D., Brito-Morales, I., Schoeman, D.S., Hanson, J.O., Dabalà, A., Neubert, S., Cannicci, S., Kaschner, K. & others. (2023). A metric-based framework for climate-smart conservation planning. Ecological Applications, 33, e2852.\n\n\nDaigle, R.M., Metaxas, A., Balbar, A.C., McGowan, J., Treml, E.A., Kuempel, C.D., Possingham, H.P. & Beger, M. (2020). Operationalizing ecological connectivity in spatial conservation planning with marxan connect (N. Golding, Ed.). Methods in Ecology and Evolution, 11, 570–579.\n\n\nHanson, J.O., Vincent, J., Schuster, R., Fahrig, L., Brennan, A., Martin, A.E., Hughes, J.S., Pither, R. & Bennett, J.R. (2022). A comparison of approaches for including connectivity in systematic conservation planning. Journal of Applied Ecology, 59, 2507–2519.\n\n\nKujala, H., Moilanen, A., Araujo, M.B. & Cabeza, M. (2013). Conservation planning with uncertain climate change projections. PloS one, 8, e53315.",
    "crumbs": [
      "Advanced topics",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Connectivity</span>"
    ]
  },
  {
    "objectID": "chapters/Zones.html",
    "href": "chapters/Zones.html",
    "title": "9  Adding zones",
    "section": "",
    "text": "9.1 Zoning for PA expansion and green infrastructure.\nFinally, Let’s think of a another example where the aim is to expand the current protected area network, while conserving as much biodiversity and green infrastructure as possible. We again define 2 management zones, one for current protected areas and expansions thereof and one for the remaining land (green infrastructure).\n# Make a manual bounded constraint data.frame to account for \n# fractional shares of current protected areas\nmcon &lt;- data.frame(pu = c( terra::cells(PU), terra::cells(PU) ),\n                   zone = c(\n                     rep(\"protected_area\", length(terra::cells(PU))),\n                     rep(\"gi\", length(terra::cells(PU)))\n                   ), \n                   lower = 0, upper = 1\n)\n# Respecify the lower and upper amount of area\nmcon$lower[mcon$zone==\"protected_area\"] &lt;- terra::values(pa, dataframe=T) |&gt; tidyr::drop_na() |&gt; dplyr::pull(layer)\n\n# Budget total of 30% totally for the PA zone, 100% for the rest\nbarea &lt;- c(\n  terra::global(PU,\"sum\",na.rm=TRUE)[,1] * .3,\n  terra::global(hmi,\"sum\",na.rm=T)[,1]\n)\n\n# Respecify targets\n1tr &lt;- matrix(nrow = terra::nlyr(spp)+1, ncol = 2)\ntr[,1] &lt;- 0.3 # Protected area zone flat target\ntr[,2] &lt;- 1   # Green infrastructure zone, everything goes\n2tr[nrow(tr),1] &lt;- 0\n\n# create problem\np &lt;- problem(c(PU,PU),                       \n             zones(                                       \n3               \"protected_area\" = c(spp,ndvi),\n               \"gi\" = c(spp*hmi,ndvi)\n             )\n             ) |&gt; \n  add_min_shortfall_objective(budget = barea) |&gt;\n  add_manual_bounded_constraints(data = mcon) |&gt; \n  add_relative_targets(targets = tr) |&gt; \n  add_proportion_decisions() |&gt; \n  add_default_solver()\n\n# Solve\ns &lt;- solve(p)\n\nplot(s)\n\n\n1\n\nNote the addition plus one here for the greenness layer.\n\n2\n\nThis specifies a target of 0 for NDVI and the protected area zone, thus no benefits can be gained here\n\n3\n\nNote the addition of NDVI to the features. Also a simple discounting of modified land for the species features\nThis solutions expands from the currently protected land in the alps (29%) to (30%). Obviously not much but this also demonstrates that often the level of policy ambition - when focussing on area alone - can be relatively modest. Although in practice even small expansions can be quite challenging in implementation.\nNote that a very similar and more elegant way can be to use linear constraints ( add_linear_constraints() ) applied per zone to limit the allocation of area per zone.",
    "crumbs": [
      "Advanced topics",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Adding zones</span>"
    ]
  },
  {
    "objectID": "chapters/Zones.html#zoning-for-pa-expansion-and-green-infrastructure.",
    "href": "chapters/Zones.html#zoning-for-pa-expansion-and-green-infrastructure.",
    "title": "9  Adding zones",
    "section": "",
    "text": "Expanding protected areas to 30% and the remainder to Green infrastructure\n\n\n\n\n\n\nSubset of shares that increase from current protected areas\n\n\n\n\n\n\n\nWatts, M.E., Ball, I.R., Stewart, R.S., Klein, C.J., Wilson, K., Steinback, C., Lourival, R., Kircher, L. & Possingham, H.P. (2009). Marxan with zones: Software for optimal conservation based land-and sea-use zoning. Environmental Modelling & Software, 24, 1513–1521.",
    "crumbs": [
      "Advanced topics",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Adding zones</span>"
    ]
  },
  {
    "objectID": "glossary.html",
    "href": "glossary.html",
    "title": "Glossary",
    "section": "",
    "text": "A glossary of key terms used in this Training course\n\n\nTerm\nAbbreviation if any\nDefinition\n\n\n\n\nAllocation\n\nSynonym use for process taken by the optimization and the decision variable per zone within a PU. Example: Binary decision is to identify expansion or not. The solver allocates PU to a solution based on complementarity.\n\n\nBoundary Length Modifier\nBLM\nA penalty constant added to a conservation problem that penalizes selecting isolated patches. Results in overall more compact solutions.\n\n\nCARE\nCARE\nA often used abbreviation that stands for Connectivity, Adequacy, Representation, and Effectiveness which key principles that should be considered when designing a conservation network. See the Marxan website for more information.\n\n\nConservation Prioritization\n\nThe computational process of identifying (spatial) priorities for a given conservation objective (such as for identifying protected areas). Usually comes in in the form of a map.\n\n\nConstrain\n\nA (often linear) constant or parameter that limits the selection of certain PU as part of the solution.\n\n\nCost\nc\nA single or multiple constant typically used in SCP to penalize solutions and any allocation of land to PU.\n\n\nExact algorithm\n\nA method to solve mathematical optimization problems using a solver.\n\n\nInteger\n\nIn programmatic terms a full number (e.g. -1, 1, 2, 3, …)\n\n\nInteger Linear Programming\nILP\nMathematical problem formulation using Linear Programming (ILP) where the variables are integer values and the objective function and equations are linear.\n\n\nPenalty\np\nIn the context of SCP commonly referring to a constant parameter used to penalize solutions. For example a costing or connectivity matrix.\n\n\nPlanning unit\nPU\nThe fundamental unit at which decisions in SCP are realized. Can be of multiple formats such as grid cells or farms\n\n\nSolver\n\nAn algorithm to identify ‘solutions’ to a mathematical problem. Often available as open- or closed-source software.\n\n\nSystematic Conservation Planning\nSCP\nA framework and step-wise approach towards mapping conservation areas. Usually involves multiple steps such as the identification of a problem and the theory of change, data collection and preparation, conservation prioritization, evaluation and finally implementation. See Margules & Pressey (2000)\n\n\nZonation\n\nA SCP software for creating conservation priority rankings and priority maps and tradeoffs. Uses a meta-heuristic approach and benefit functions for ranking. The latest version is Zonation 5.\n\n\nZone\nZ\nZones are spatial or thematic management units over which decisions are made in a SCP problem. Examples: Core zone, Buffer zone and sustainable management zone in a national park.\n\n\n\n\n\n\n\nMargules, C.R. & Pressey, R.L. (2000). Systematic conservation planning. Nature, 405, 243–253.",
    "crumbs": [
      "Glossary"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Alagador, D. & Cerdeira, J.O. (2020). Revisiting the minimum set\ncover, the maximal coverage problems and a maximum benefit area\nselection problem to make climate-change-concerned conservation plans\neffective. Methods in Ecology and Evolution, 11,\n1325–1337.\n\n\nAlagador, D., Trivino, M., Cerdeira, J.O., Bras, R., Cabeza, M. &\nAraujo, M.B. (2012). Linking like with like: Optimising connectivity\nbetween environmentally-similar habitats. Landscape Ecology,\n27, 291–301.\n\n\nAlbuquerque, F. & Beier, P. (2015). Rarity-weighted richness: A\nsimple and reliable alternative to integer programming and heuristic\nalgorithms for minimum set and maximum coverage problems in conservation\nplanning. PloS one, 10, e0119905.\n\n\nArmsworth, P.R. (2014). Inclusion of costs in conservation planning\ndepends on limited datasets and hopeful assumptions. Annals of the\nNew York Academy of Sciences, 1322, 61–76.\n\n\nArponen, A., Heikkinen, R.K., Thomas, C.D. & Moilanen, A. (2005).\nThe value of biodiversity in reserve selection: Representation, species\nweighting, and benefit functions. Conservation Biology,\n19, 2009–2014.\n\n\nBall, I.R., Possingham, H.P. & Watts, M. (2009). Marxan and\nrelatives: Software for spatial conservation prioritisation. Spatial\nconservation prioritisation: Quantitative methods and computational\ntools, 14, 185–196.\n\n\nBeger, M., Linke, S., Watts, M., Game, E., Treml, E., Ball, I. &\nPossingham, H.P. (2010). Incorporating asymmetric connectivity into\nspatial decision making for conservation. Conservation Letters,\n3, 359–368.\n\n\nBeger, M., Metaxas, A., Balbar, A.C., McGowan, J.A., Daigle, R.,\nKuempel, C.D., Treml, E.A. & Possingham, H.P. (2022). Demystifying\necological connectivity for actionable spatial conservation\nplanning. Trends in Ecology & Evolution,\nS0169534722002221.\n\n\nBeyer, H.L., Dujardin, Y., Watts, M.E. & Possingham, H.P. (2016).\nSolving conservation planning problems with integer linear programming.\nEcological Modelling, 328, 14–22.\n\n\nBuenafe, K.C.V., Dunn, D.C., Everett, J.D., Brito-Morales, I., Schoeman,\nD.S., Hanson, J.O., Dabalà, A., Neubert, S., Cannicci, S., Kaschner, K.\n& others. (2023). A metric-based framework for climate-smart\nconservation planning. Ecological Applications, 33,\ne2852.\n\n\nCabeza, M. & Moilanen, A. (2001). Design of reserve networks and the\npersistence of biodiversity. Trends in ecology & evolution,\n16, 242–248.\n\n\nDaigle, R.M., Metaxas, A., Balbar, A.C., McGowan, J., Treml, E.A.,\nKuempel, C.D., Possingham, H.P. & Beger, M. (2020). Operationalizing\necological connectivity in spatial conservation planning with marxan\nconnect (N. Golding, Ed.). Methods in Ecology and\nEvolution, 11, 570–579.\n\n\nDou, Y., Cosentino, F., Malek, Z., Maiorano, L., Thuiller, W. &\nVerburg, P.H. (2021). A new european land systems representation\naccounting for landscape characteristics. Landscape Ecology,\n36, 2215–2234.\n\n\nHanson, J.O., Schuster, R., Strimas-Mackey, M. & Bennett, J.R.\n(2019). Optimality in prioritizing conservation projects. Methods in\nEcology and Evolution, 10, 1655–1663.\n\n\nHanson, J.O., Vincent, J., Schuster, R., Fahrig, L., Brennan, A.,\nMartin, A.E., Hughes, J.S., Pither, R. & Bennett, J.R. (2022). A comparison of\napproaches for including connectivity in systematic conservation\nplanning. Journal of Applied Ecology, 59,\n2507–2519.\n\n\nJantke, K., Kuempel, C.D., McGowan, J., Chauvenet, A.L. &\nPossingham, H.P. (2019). Metrics for evaluating representation target\nachievement in protected area networks. Diversity and\nDistributions, 25, 170–175.\n\n\nJung, M., Arnell, A., De Lamo, X., Garcı́a-Rangel, S., Lewis, M., Mark,\nJ., Merow, C., Miles, L., Ondo, I., Pironon, S. & others. (2021).\nAreas of global importance for conserving terrestrial biodiversity,\ncarbon and water. Nature Ecology & Evolution, 5,\n1499–1509.\n\n\nKujala, H., Lahoz-Monfort, J.J., Elith, J. & Moilanen, A. (2018).\nNot all data are equal: Influence of data type and amount in spatial\nconservation prioritisation. Methods in Ecology and Evolution,\n9, 2249–2261.\n\n\nKujala, H., Moilanen, A., Araujo, M.B. & Cabeza, M. (2013).\nConservation planning with uncertain climate change projections.\nPloS one, 8, e53315.\n\n\nKukkala, A.S. & Moilanen, A. (2013). Core concepts of spatial\nprioritisation in systematic conservation planning. Biological\nReviews, 88, 443–464.\n\n\nMargules, C.R. & Pressey, R.L. (2000). Systematic conservation\nplanning. Nature, 405, 243–253.\n\n\nMcCreless, E., Visconti, P., Carwardine, J., Wilcox, C. & Smith,\nR.J. (2013). Cheap and nasty? The potential perils of using management\ncosts to identify global conservation priorities. PLoS One,\n8, e80893.\n\n\nRodrigues, A.S., Akcakaya, H.R., Andelman, S.J., Bakarr, M.I., Boitani,\nL., Brooks, T.M., Chanson, J.S., Fishpool, L.D., Da Fonseca, G.A.,\nGaston, K.J. & others. (2004). Global gap analysis: Priority regions\nfor expanding the global protected-area network. BioScience,\n54, 1092–1100.\n\n\nWatts, M.E., Ball, I.R., Stewart, R.S., Klein, C.J., Wilson, K.,\nSteinback, C., Lourival, R., Kircher, L. & Possingham, H.P. (2009).\nMarxan with zones: Software for optimal conservation based land-and\nsea-use zoning. Environmental Modelling & Software,\n24, 1513–1521.",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "appendices/installation.html",
    "href": "appendices/installation.html",
    "title": "Appendix A — Installation of all required software",
    "section": "",
    "text": "A.1 Install R\nR is a programming language and environment specifically designed for statistical computing and graphics. It is widely used among statisticians and data analysts for its extensive capabilities in data manipulation, statistical modelling, and graphical representation.\nTo install R, please go to the following website, then:\nIn addition, we also recommend the installation of RTools on the same website (here for example for Windows). RTools contains a range of code compilation software, such as a C++ compiler. These software are often necessary to install additional R-packages, particular when they are not available in binary format.\nTo download RTools, click the “Rtools44 installer” link, download and execute and follow the instructions.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Installation of all required software</span>"
    ]
  },
  {
    "objectID": "appendices/installation.html#install-r",
    "href": "appendices/installation.html#install-r",
    "title": "Appendix A — Installation of all required software",
    "section": "",
    "text": "Click on the link at the top for your respective operating system\nRecommended is the base version of R particular for new users. Select the latest version 4.4, download and execute.\nFollow the instructions in the installation popup.\n\n\n\n\n\n\n\nAlthough older R-versions can work as well (e.g. R 4.3), we recommend the latest version with which the training materials have been tested.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Installation of all required software</span>"
    ]
  },
  {
    "objectID": "appendices/installation.html#install-a-ide-such-as-rstudio",
    "href": "appendices/installation.html#install-a-ide-such-as-rstudio",
    "title": "Appendix A — Installation of all required software",
    "section": "A.2 Install a IDE such as Rstudio",
    "text": "A.2 Install a IDE such as Rstudio\nBy default R is terminal based, meaning inputs are parsed as entered. To create reproducible scripts we recommend the use of an integrated development environment (IDE) and here in particular Rstudio. Of course other alternative IDEs can also be used such as for example Visual Code. It is free to use in its basic version and available for most operating systems, including Windows 10/11, Linux and MacOS distributions.\nTo download and install Rstudio follow the instructions on this website.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Installation of all required software</span>"
    ]
  },
  {
    "objectID": "appendices/installation.html#install-a-solver-in-r",
    "href": "appendices/installation.html#install-a-solver-in-r",
    "title": "Appendix A — Installation of all required software",
    "section": "A.3 Install a solver in R",
    "text": "A.3 Install a solver in R\nTo use prioritizr and solve a conservation problem, we require a solver. Solvers are specialized algorithms or software designed to find the best solution (or an optimal solution) to a mathematical problem that involves maximizing or minimizing a particular function subject to certain constraints. For different mathematical problems, for example linear or mixed programming, different solvers are often necessary or perform better.\nMany state-of-the-art solvers are proprietary and often used by large companies to solve problems related to supply chain or financial risk managements. Although freely available and open-source solver slowly catch up, they usually cannot compete with proprietary such as Gurobi or CPLEX. For a comprehensive overview of different available and supported solvers a detailed vignette can be found on the prioritizr website.\nFor new users we recommend the use of the HiGHS solver, which is free to use and can be installed across a range of operating systems. To enable it run the following code and make sure it runs through without issues.\n\ninstall.packages(\"highs\")\n\nIf for some reason the installation of he package fails, another option could be the cbc solver, which can currently only be installed directly from the developers Github repository. For this to work you likely need to have RTools installed (see A.1 above).\n\nif (!require(remotes)) install.packages(\"remotes\")\nremotes::install_github(\"dirkschumacher/rcbc\")\n\n\n\n\n\n\n\nGurobi\n\n\n\nThe Gurobi solver is among the fastest supported ones for prioritizr. Unfortunately it is not openly available and purchasing it can be quite costly. However for academic users (those with an academic email) and researchers it is possible to obtain a time-limited (usually 12 months) license for research projects. This License can also be renewed.\nFor further information see the installation vignette on the prioritizr homepage!",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Installation of all required software</span>"
    ]
  },
  {
    "objectID": "appendices/installation.html#install-required-r-packages",
    "href": "appendices/installation.html#install-required-r-packages",
    "title": "Appendix A — Installation of all required software",
    "section": "A.4 Install required R packages",
    "text": "A.4 Install required R packages\nIn addition to the R and the solver packages above, we need to install several packages related to (spatial) data handling. These include for example dplyr, terra and sf, but also ggplot2 for plotting.\nTo install please run the following code in your R terminal:\n\ninstall.packages(\"dplyr\")\ninstall.packages(\"terra\")\ninstall.packages(\"sf\")\ninstall.packages(\"ggplot2\")\ninstall.packages(\"tidyterra\")\n\nMake sure that every line executes without an error. If you see an error, check first online for potential solutions (google) and afterwards get in touch with the course organizers.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Installation of all required software</span>"
    ]
  },
  {
    "objectID": "appendices/FAQ.html",
    "href": "appendices/FAQ.html",
    "title": "Appendix B — Frequently asked questions (FAQ)",
    "section": "",
    "text": "B.1 I don’t understand the outputs\nIf you can not interpret the outputs based on the course materials and instructions, please see the help pages of the function (enter ??command in the R console or F1 on your keyboard).\nThe Prioritizr homepage can also be a quite valuable resource for looking up parameters and instructions. If nothing else, get in touch with the coordinators!",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Frequently asked questions (FAQ)</span>"
    ]
  },
  {
    "objectID": "appendices/FAQ.html#i-cant-install-any-software",
    "href": "appendices/FAQ.html#i-cant-install-any-software",
    "title": "Appendix B — Frequently asked questions (FAQ)",
    "section": "B.2 I can’t install any software",
    "text": "B.2 I can’t install any software\nTo install R, RStudio and often also R-packages on any Computer (Windows/Linux/MacOS) usually requires adminstrator (or sudo) rights.\nIf you are not able at all to install any or all of the software listed in the installation instructions (@sec-installation), please get in touch with the course organizers and we will try our best to find a way forward!",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Frequently asked questions (FAQ)</span>"
    ]
  },
  {
    "objectID": "appendices/FAQ.html#my-computer-is-freezing",
    "href": "appendices/FAQ.html#my-computer-is-freezing",
    "title": "Appendix B — Frequently asked questions (FAQ)",
    "section": "B.3 My Computer is freezing",
    "text": "B.3 My Computer is freezing\nSolving particular large conservation planning problems can take quite some computational resources. This becomes especially an issue with larger conservation problems, for example when planning over larger area or more highly resolved planning units (i.e. spatial scale).\nBy solving your planning problem the entire dataset can be bigger than you might anticipate (Number of features times number of planning units times number of constraints) and needs to be processed as a whole. Because of this the amount of memory available on your operating system is usually the limitation. For example, in a global prioritization effort done with ~10km planning units ((Jung et al. 2021)), at least 140GB of RAM (Computer memory) was needed to solve the conservation problems.\nIf - during the solving - your computer suddenly starts to freeze, then you likely don’t have enough computational resources to solve the problem formulation. In this case I would recommend to subset the features and PU to a smaller extent, for example using the outline of the Alps from here.\n\nThen subset as follows:\n\nalps &lt;- sf::st_read(\"layer\")\nlayer |&gt; terra::crop(alps) |&gt; terra::mask(alps)",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Frequently asked questions (FAQ)</span>"
    ]
  },
  {
    "objectID": "appendices/FAQ.html#solving-the-problem-takes-too-long",
    "href": "appendices/FAQ.html#solving-the-problem-takes-too-long",
    "title": "Appendix B — Frequently asked questions (FAQ)",
    "section": "B.4 Solving the problem takes too long",
    "text": "B.4 Solving the problem takes too long\nOther than using a faster solver or simplifying the problem (see also suggestion above), there are few options available directly with the solver:\n\n(Parameter gap in the solver) Increase the gap (Default is 0.1) to a larger estimate. This can result in suboptimal but still feasible solutions which are usually very close.\n(Parameter time_limit in the solver) Increasing this number caps the computation time. Units are in seconds.\n(Parameter first_feasible in the solver) Setting this to TRUE makes the solver return the first feasible solution, which might not be optimal one, but is usually quite close.\n\n\n\n\n\nJung, M., Arnell, A., De Lamo, X., Garcı́a-Rangel, S., Lewis, M., Mark, J., Merow, C., Miles, L., Ondo, I., Pironon, S. & others. (2021). Areas of global importance for conserving terrestrial biodiversity, carbon and water. Nature Ecology & Evolution, 5, 1499–1509.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Frequently asked questions (FAQ)</span>"
    ]
  }
]