# Solving and interpreting solutions {#sec-solving-and-interpreting-solutions}

In this section we will create a solution to the previously set up planning problem (object **p**, see @sec-create-and-planning-problem). Specifically we will solve the problem, analyse its outputs and calculate a range of metrics and indicators describing it.

## Find a solution for a conservation problem

In the previous section we defined a conservation problem based on a planning unit file, features, the specification of an objective function and decision variable. We also added a solver which we can now use to find a solution to the problem specified.

```{r, eval = FALSE}
library(rcbc) # Load the library for the solver just to be sure!
# solve and create the solution 
s <- solve(p) 
```

Running this code will create a lot of output in the terminal and different solvers make different outputs and take different length of times to create solutions (they are effectively external software of varying sophistication). You can pipe in a different solver (such as **add_highs_solver()**) to test this out. See also @hanson2019optimality

## Plot the solution

The output of the solved problem from above is essentially a spatial raster that can be plotted.

```{r, eval = FALSE}

# plot the solution map
plot(s,  col = viridisLite::mako(n = 10, direction = -1), axes = F)

```

![](/figures/solution_0.PNG){width="339"}

::: {#task}
With the specified objective function, can you summarize the amount of area contained in the solution? How much would you expect?
:::

## Calculate performance evaluation metrics

We can assess the performance of this solution for the species by assessing their representation and their target shortfall.

```{r, eval = F}

rpz_target_spp <- eval_target_coverage_summary(p, s)

## mean representation across all species 
mean(rpz_target_spp$relative_held)

## mean target shortfall across all species 
mean(rpz_target_spp$relative_shortfall)
```

## Irreplaceability

Calculate irreplaceability of the solution using different methods.

The replacement cost scores can be calculated for small and moderate sized problems but may not be feasible for large problems (e.g., more than 100,000 planning units). For large problems, it is recommended to use the Ferrier method, which can be calculated relatively quickly for large-sized problems and it explicitly accounts for representation targets. Rarity weighted richness should only be used when neither of the other two methods can be used.

```{r, eval = F}

## to calculate importance scores using replacement cost: 
# ir1 <- eval_replacement_importance(p, s)
## do not run: this only works for small problems. 

# calculate importance scores using Ferrier et al 2000 method,
# and extract the total importance scores
ir2 <- eval_ferrier_importance(p, s)[["total"]]

# calculate importance scores using rarity weighted richness scores
ir3 <- eval_rare_richness_importance(p, s)


plot(c(ir1, ir2, ir3), axes = F, col = viridisLite::magma(n = 100, direction =-1))
```
